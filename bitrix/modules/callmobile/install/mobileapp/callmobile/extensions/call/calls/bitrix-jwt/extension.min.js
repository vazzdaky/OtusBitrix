"use strict";(function(){include("Calls");BX.DoNothing=function(){};const e={invite:"call.Call.invite",decline:"call.Call.decline"};const t={switchTrackRecordStatus:"Call::switchTrackRecordStatus"};const i={voiceStarted:"Call::voiceStarted",voiceStopped:"Call::voiceStopped",microphoneState:"Call::microphoneState",cameraState:"Call::cameraState",videoPaused:"Call::videoPaused",screenState:"Call::screenState",floorRequest:"Call::floorRequest",emotion:"Call::emotion",usersInvited:"Call::usersInvited",userInviteTimeout:"Call::userInviteTimeout",showUsers:"Call::showUsers",showAll:"Call::showAll",hideAll:"Call::hideAll",recordState:"Call::recordState"};const n={onCallConference:"BitrixCallDev::onCallConference"};const s=15e3;const a=3e4;class o{constructor(e){this.uuid=e.uuid;this.instanceId=e.instanceId;this.parentId=e.parentId||null;this.parentUuid=e.parentUuid||null;this.direction=e.direction;this.type=e.type||BX.Call.Type.Instant;this.users=[];this.scheme=e.scheme;this.ready=false;this.userId=env.userId;this.userData=e.userData;this.initiatorId=e.initiatorId||"";this.associatedEntity=BX.type.isPlainObject(e.associatedEntity)?e.associatedEntity:{};this.startDate=new Date(BX.prop.getString(e,"startDate",""));this.videoEnabled=e.videoEnabled===true;this.videoHd=e.videoHd===true;this.cameraId=e.cameraId||"";this.microphoneId=e.microphoneId||"";this.muted=e.muted===true;if(callEngine.getLogService()&&this.logToken){this.logger=new CallLogger(callEngine.getLogService(),this.logToken)}this.connectionData=e.connectionData||{};this._recorderState=BX.Call.RecorderStatus.None;this.bitrixCallDev=null;this.signaling=new l({call:this});this.peers={};this._joinStatus=BX.Call.JoinStatus.None;Object.defineProperty(this,"joinStatus",{get:this.getJoinStatus.bind(this),set:this.setJoinStatus.bind(this)});this._active=false;Object.defineProperty(this,"active",{get:this.getActive.bind(this),set:this.setActive.bind(this)});this.localVideoShown=false;this.clientEventsBound=false;this._screenShared=false;this.someoneWasConnected=false;this.client=null;this.eventEmitter=new JNEventEmitter;if(typeof e.events==="object"){for(const t in e.events){this.eventEmitter.on(t,e.events[t])}}this.__onLocalVideoStreamReceivedHandler=this.__onLocalVideoStreamReceived.bind(this);this.__onLocalVideoStreamRemovedHandler=this.__onLocalVideoStreamRemoved.bind(this);this.__onCallDisconnectedHandler=this.__onCallDisconnected.bind(this);this.__onCallMessageReceivedHandler=this.__onCallMessageReceived.bind(this);this.__onCallEndpointAddedHandler=this.__onCallEndpointAdded.bind(this);this.__onCallRecorderStatusChangedHandler=this.__onCallRecorderStatusChanged.bind(this);this.__onCallReconnectingHandler=this.__onCallReconnecting.bind(this);this.__onCallReconnectedHandler=this.__onCallReconnected.bind(this);this.__onUsersLimitExceededHandler=this.__onUsersLimitExceeded.bind(this);this.__onSignalingResponseReceivedHandler=this.__onSignalingResponseReceived.bind(this);this.__onSDKLogMessageHandler=this.__onSDKLogMessage.bind(this);this.created=new Date;this._reconnectionEventCount=0;this._maxReconnectionAttempts=5}get provider(){return BX.Call.Provider.Bitrix}get hasConnectionData(){return!!(this.connectionData.mediaServerUrl&&this.connectionData.roomData)}setConnectionData(e){this.connectionData=e}log(){const e=CallUtil.getLogMessage.apply(CallUtil,arguments);if(console&&callEngine.debugFlag){const e=[`Call log [${CallUtil.getTimeForLog()}]: `];console.log.apply(this,e.concat(Array.prototype.slice.call(arguments)))}if(this.logger){this.logger.log(e)}}on(e,t){this.eventEmitter.on(e,t);return this}off(e,t){if(this.eventEmitter){this.eventEmitter.off(e,t)}return this}initPeers(){this.users.forEach((e=>{e=parseInt(e,10);this.peers[e]=this.createPeer(e)}))}reinitPeers(){for(const e in this.peers){if(this.peers.hasOwnProperty(e)&&this.peers[e]){this.peers[e].destroy();this.peers[e]=null}}this.initPeers()}repeatAnswerEvents(){this.signaling.sendRepeatAnswer({userId:this.userId})}createPeer(e){let t;if(this.videoAllowedFrom===BX.Call.UserMnemonic.all){t=true}else if(this.videoAllowedFrom===BX.Call.UserMnemonic.none){t=false}else if(BX.type.isArray(this.videoAllowedFrom)){t=this.videoAllowedFrom.some((t=>t==e))}else{t=true}return new d({call:this,userId:e,ready:e==this.initiatorId,isIncomingVideoAllowed:t,onStreamReceived:e=>this.eventEmitter.emit(BX.Call.Event.onStreamReceived,[e.userId,e.stream]),onUserVoiceStarted:e=>this.eventEmitter.emit(BX.Call.Event.onUserVoiceStarted,[e.userId]),onUserVoiceStopped:e=>this.eventEmitter.emit(BX.Call.Event.onUserVoiceStopped,[e.userId]),onStateChanged:this.__onPeerStateChanged.bind(this),onInviteTimeout:this.__onPeerInviteTimeout.bind(this),onInitialState:e=>{this.eventEmitter.emit(BX.Call.Event.onUserFloorRequest,[e.userId,e.floorRequest]);this.eventEmitter.emit(BX.Call.Event.onUserMicrophoneState,[e.userId,e.microphoneState])},onHandRaised:e=>this.eventEmitter.emit(BX.Call.Event.onUserFloorRequest,[e.userId,e.isHandRaised])})}getUsers(){const e={};for(const t in this.peers){e[t]=this.peers[t].calculatedState}return e}getJoinStatus(){return this._joinStatus}setJoinStatus(e){if(e==this._joinStatus){return}this._joinStatus=e;switch(this._joinStatus){case BX.Call.JoinStatus.Local:this.eventEmitter.emit(BX.Call.Event.onJoin,[{callUuid:this.uuid,local:true}]);break;case BX.Call.JoinStatus.Remote:this.eventEmitter.emit(BX.Call.Event.onJoin,[{callUuid:this.uuid,local:false}]);break;case BX.Call.JoinStatus.None:this.eventEmitter.emit(BX.Call.Event.onLeave,[{callUuid:this.uuid}]);break}}getActive(){return this._active}setActive(e){if(e===this._active){return}this._active=e;this.eventEmitter.emit(this.active?BX.Call.Event.onActive:BX.Call.Event.onInactive,[{callUuid:this.uuid}])}get isCopilotInitialized(){return this._recorderState!==BX.Call.RecorderStatus.None}get isCopilotActive(){return this._recorderState===BX.Call.RecorderStatus.Enabled}get isCopilotDisabled(){return this._recorderState===BX.Call.RecorderStatus.Destroyed}bindClientEvents(){const e=VoxImplant.Hardware.StreamManager.get();if(!this.clientEventsBound){e.on(VoxImplant.Hardware.HardwareEvents.DevicesUpdated,this.__onLocalDevicesUpdatedHandler);e.on(VoxImplant.Hardware.HardwareEvents.MediaRendererAdded,this.__onLocalMediaRendererAddedHandler);e.on(VoxImplant.Hardware.HardwareEvents.MediaRendererUpdated,this.__onLocalMediaRendererAddedHandler);e.on(VoxImplant.Hardware.HardwareEvents.BeforeMediaRendererRemoved,this.__onBeforeLocalMediaRendererRemovedHandler);this.clientEventsBound=true}}removeClientEvents(){if(BXClient){BXClient.getInstance().off(BXClient.Events.LogMessage,this.__onSDKLogMessageHandler)}}isMuted(){return this.muted}setMuted(e){this.muted=e;if(this.bitrixCallDev){this.bitrixCallDev.sendAudio=!this.muted;this.signaling.sendMicrophoneState(!this.muted)}}toggleRecorderState(){if(!this.bitrixCallDev){return}this.bitrixCallDev.setRecorderState(this._recorderState===BX.Call.RecorderStatus.Enabled?BX.Call.RecorderStatus.Paused:BX.Call.RecorderStatus.Enabled)}toggleSubscriptionRemoteVideo(e){if(this.bitrixCallDev&&this.bitrixCallDev.toggleSubscriptionRemoteVideo){this.bitrixCallDev.toggleSubscriptionRemoteVideo(e)}}onCentralUserSwitch(e){if(this.bitrixCallDev&&this.bitrixCallDev.onCentralUserSwitch){this.bitrixCallDev.onCentralUserSwitch(e)}}switchCamera(){if(!this.videoEnabled){return}JNBXCameraManager.useBackCamera=!JNBXCameraManager.useBackCamera}isFrontCameraUsed(){return!JNBXCameraManager.useBackCamera}isVideoEnabled(){return this.videoEnabled}setVideoEnabled(e){if(e&&!CallUtil.havePermissionToBroadcast("cam")){return}e=e===true;if(this.videoEnabled==e){return}this.videoEnabled=e;if(this.bitrixCallDev){this.bitrixCallDev.setSendVideo(this.videoEnabled&&!this.videoPaused);this.signaling.sendCameraState(this.videoEnabled)}}setVideoPaused(e){if(this.videoPaused==e||!this.videoEnabled){return}this.videoPaused=e;if(this.bitrixCallDev){this.bitrixCallDev.setSendVideo(this.videoEnabled&&!this.videoPaused);this.signaling.sendVideoPaused(this.videoPaused)}}requestFloor(e){this.bitrixCallDev.raiseHand(e)}allowVideoFrom(e){if(this.videoAllowedFrom==e){return}this.videoAllowedFrom=e;if(e===BX.Call.UserMnemonic.all){this.signaling.sendShowAll();e=Object.keys(this.peers)}else if(e===BX.Call.UserMnemonic.none){this.signaling.sendHideAll();e=[]}else if(BX.type.isArray(e)){this.signaling.sendShowUsers(e)}else{throw new TypeError("userList is in wrong format")}const t={};e.forEach((e=>t[e]=true));for(const e in this.peers){if(!this.peers.hasOwnProperty(e)){continue}if(t[e]){this.peers[e].allowIncomingVideo(true)}else{this.peers[e].allowIncomingVideo(false)}}}inviteUsers(e={}){this.ready=true;const t=BX.type.isArray(e.users)?e.users:this.users;this.attachToConference().then((()=>{if(t.length>0){return this.signaling.inviteUsers({userIds:t,video:this.videoEnabled?"Y":"N"})}})).then((e=>{clearTimeout(this.waitForAnswerTimeout);this.waitForAnswerTimeout=setTimeout((()=>{this.__onNoAnswer()}),a);this.joinStatus=BX.Call.JoinStatus.Local;for(const e of t){const t=parseInt(e,10);if(!this.users.includes(t)){this.users.push(t)}if(!this.peers[t]){this.peers[t]=this.createPeer(t)}this.peers[t].onInvited()}})).catch(this.onFatalError.bind(this))}answer(e){this.ready=true;if(!BX.type.isPlainObject(e)){e={}}this.videoEnabled=e.useVideo===true;this.attachToConference().then((()=>{this.log("Attached to conference");this.joinStatus=BX.Call.JoinStatus.Local})).catch(this.onFatalError.bind(this))}decline(t){this.ready=false;const i={callUuid:this.uuid,callInstanceId:this.instanceId};if(t){i.code=t}BX.rest.callMethod(e.decline,i)}hangup(e,t){if(!this.ready){const e=new Error("Hangup in wrong state");this.log(e);return}const i=new Error;i.name="Call stack:";this.log(`Hangup received \n${i.stack}`);const n={};this.ready=false;if(typeof e!=="undefined"){n.code=e}if(typeof t!=="undefined"){n.reason=t}if(t!=="SIGNALING_DUPLICATE_PARTICIPANT"){this.reinitPeers()}this.joinStatus=BX.Call.JoinStatus.None;n.userId=this.users;this.muted=false;if(this.bitrixCallDev){this.bitrixCallDev._replaceVideoSharing=false;try{this.bitrixCallDev.hangup()}catch(e){CallUtil.error(e)}this.bitrixCallDev=null}}cancel(){this.ready=true;this.hangup()}attachToConference(){return new Promise(((e,t)=>{if(this.bitrixCallDev){return e()}r.getClient().then((i=>{if(!this.ready){return}try{if(typeof JNBXCameraManager.setResolutionConstraints==="function"){JNBXCameraManager.setResolutionConstraints(960,540)}if(!this.hasConnectionData){CallUtil.error("Signaling url is null");t({code:BX.Call.CallError.EmptySignalingUrl})}const e=this.getSignalingUrl(this.connectionData.mediaServerUrl,this.connectionData.roomData);const n={signalingUrl:e,callId:`${this.uuid}`,sendVideo:this.videoEnabled,receiveVideo:true,enableSimulcast:true,userName:this.userData,callBetaIosEnabled:callEngine.isCallBetaIosEnabled()};this.bitrixCallDev=i.startCall(n)}catch(e){CallUtil.error(e);return t(e)}if(!this.bitrixCallDev){this.log("Error: could not create bitrix dev call");return t({code:"BITRIX_DEV_NO_CALL"})}this.eventEmitter.emit(n.onCallConference,[{call:this}]);this.bindCallEvents();const s=()=>{this.log("Call connected");this.bitrixCallDev.off(JNBXCall.Events.Connected,s);this.bitrixCallDev.off(JNBXCall.Events.Failed,a);this.bitrixCallDev.on(JNBXCall.Events.Failed,this.__onCallDisconnectedHandler);this.bitrixCallDev.sendAudio=!this.muted;this.signaling.sendMicrophoneState(!this.muted);this.signaling.sendCameraState(this.videoEnabled);if(this.videoAllowedFrom==BX.Call.UserMnemonic.none){this.signaling.sendHideAll()}else if(BX.type.isArray(this.videoAllowedFrom)){this.signaling.sendShowUsers(this.videoAllowedFrom)}this.eventEmitter.emit(BX.Call.Event.onCallConnected,[]);e()};let a=(e,i)=>{this.log("Could not attach to conference",i);CallUtil.error("Could not attach to conference",i);if(this.bitrixCallDev){this.bitrixCallDev.off(JNBXCall.Events.Connected,s);this.bitrixCallDev.off(JNBXCall.Events.Failed,a)}t(i)};this.bitrixCallDev.on(JNBXCall.Events.Connected,s);this.bitrixCallDev.on(JNBXCall.Events.Failed,a);this.bitrixCallDev.start();i.on(BXClient.Events.LogMessage,this.__onSDKLogMessageHandler)})).catch(this.onFatalError.bind(this))}))}updateUsersCount(e){this.eventEmitter.emit(BX.Call.Event.onChatUsersCountUpdate,[e])}getSignalingUrl(e,t){return e+"?auto_subscribe=1&sdk=js&version=1.6.7&protocol=8&roomData="+t}bindCallEvents(){this.bitrixCallDev.on(JNBXCall.Events.Disconnected,this.__onCallDisconnectedHandler);this.bitrixCallDev.on(JNBXCall.Events.ReceiveMessage,this.__onCallMessageReceivedHandler);this.bitrixCallDev.on(JNBXCall.Events.EndpointAdded,this.__onCallEndpointAddedHandler);this.bitrixCallDev.on(JNBXCall.Events.LocalVideoStreamAdded,this.__onLocalVideoStreamReceivedHandler);this.bitrixCallDev.on(JNBXCall.Events.LocalVideoStreamRemoved,this.__onLocalVideoStreamRemovedHandler);this.bitrixCallDev.on(JNBXCall.Events.RecorderStatusChanged,this.__onCallRecorderStatusChangedHandler);this.bitrixCallDev.on(JNBXCall.Events.Reconnecting,this.__onCallReconnectingHandler);this.bitrixCallDev.on(JNBXCall.Events.Reconnected,this.__onCallReconnectedHandler);this.bitrixCallDev.on(JNBXCall.Events.OnUsersLimitExceeded,this.__onUsersLimitExceededHandler);this.bitrixCallDev.on(JNBXCall.Events.SignalingResponseReceived,this.__onSignalingResponseReceivedHandler)}removeCallEvents(){if(this.bitrixCallDev){this.bitrixCallDev.off(JNBXCall.Events.Disconnected,this.__onCallDisconnectedHandler);this.bitrixCallDev.off(JNBXCall.Events.ReceiveMessage,this.__onCallMessageReceivedHandler);this.bitrixCallDev.off(JNBXCall.Events.EndpointAdded,this.__onCallEndpointAddedHandler);this.bitrixCallDev.off(JNBXCall.Events.LocalVideoStreamAdded,this.__onLocalVideoStreamReceivedHandler);this.bitrixCallDev.off(JNBXCall.Events.LocalVideoStreamRemoved,this.__onLocalVideoStreamRemovedHandler);this.bitrixCallDev.off(JNBXCall.Events.RecorderStatusChanged,this.__onCallRecorderStatusChangedHandler);this.bitrixCallDev.off(JNBXCall.Events.Reconnecting,this.__onCallReconnectingHandler);this.bitrixCallDev.off(JNBXCall.Events.Reconnected,this.__onCallReconnectedHandler);this.bitrixCallDev.off(JNBXCall.Events.OnUsersLimitExceeded,this.__onUsersLimitExceededHandler);this.bitrixCallDev.off(JNBXCall.Events.SignalingResponseReceived,this.__onSignalingResponseReceivedHandler)}}addJoinedUsers(e){for(const t of e){const e=Number(t);if(e==this.userId||this.peers[e]){continue}this.peers[e]=this.createPeer(e);if(!this.users.includes(e)){this.users.push(e)}this.eventEmitter.emit(BX.Call.Event.onUserInvited,[{userId:e}])}}addInvitedUsers(e){const t=Object.keys(e);for(let i=0;i<t.length;i++){const i=parseInt(t[0],10);if(i==this.userId){continue}if(this.peers[i]){if(this.peers[i].calculatedState===BX.Call.UserState.Failed||this.peers[i].calculatedState===BX.Call.UserState.Idle){this.peers[i].onInvited()}}else{this.peers[i]=this.createPeer(i);this.peers[i].onInvited();this.eventEmitter.emit(BX.Call.Event.onUserInvited,{userId:i,userData:{[i]:e[i]}})}if(!this.users.includes(i)){this.users.push(i)}this.eventEmitter.emit(BX.Call.Event.onUserInvited,[{userId:i}])}this.updateUsersCount(this.users.length)}isAnyoneParticipating(e){for(const t in this.peers){if(this.peers[t].isParticipating(e)){return true}}return false}getParticipatingUsers(){const e=[];for(const t in this.peers){if(this.peers[t].isParticipating()){e.push(t)}}return e}__onPeerStateChanged(e){this.eventEmitter.emit(BX.Call.Event.onUserStateChanged,[e.userId,e.state,e.previousState]);if(!this.ready){return}if((e.state==BX.Call.UserState.Failed||e.state==BX.Call.UserState.Unavailable||e.state==BX.Call.UserState.Declined||e.state==BX.Call.UserState.Idle)&&this.type==BX.Call.Type.Instant&&!this.isAnyoneParticipating(!this.someoneWasConnected)){this.hangup()}if(e.state==BX.Call.UserState.Connected&&!this.someoneWasConnected){this.someoneWasConnected=true}}__onPeerInviteTimeout(e){if(!this.ready){return}this.signaling.sendUserInviteTimeout({userId:this.users,failedUserId:e.userId})}_onPullEvent(e,i,n){const s={"Call::answer":this.__onPullEventAnswer.bind(this),"Call::hangup":this.__onPullEventHangup.bind(this),"Call::finish":this.__onPullEventFinish.bind(this),[t.switchTrackRecordStatus]:this.__onPullEventSwitchTrackRecordStatus.bind(this)};if(s[e]){this.log(`Signaling: ${e}; Parameters: ${JSON.stringify(i)}`);s[e].call(this,i,n)}}__onPullEventAnswer(e,t){const i=Number(e.senderId);if(i==this.userId){return this.__onPullEventAnswerSelf(e,t)}if(!this.peers[i]){this.peers[i]=this.createPeer(i);this.eventEmitter.emit(BX.Call.Event.onUserInvited,[{userId:i}])}if(!this.users.includes(i)){this.users.push(i)}this.peers[i].setReady(true)}__onPullEventAnswerSelf(e,t){if(e.callInstanceId===this.instanceId||t.server_time_ago>30){return}this.joinStatus=BX.Call.JoinStatus.Remote}__onPullEventHangup(e){const t=e.senderId;if(this.userId==t&&this.instanceId!=e.callInstanceId){this.joinStatus=BX.Call.JoinStatus.None;this.eventEmitter.emit(BX.Call.Event.onHangup);return}if(!this.peers[t]||this.peers[t].endpoint){return}this.peers[t].setReady(false);if(e.code==603){this.peers[t].setDeclined(true)}else if(e.code==486){this.peers[t].setBusy(true);CallUtil.error(`user ${t} is busy`)}if(this.ready&&this.type==BX.Call.Type.Instant&&!this.isAnyoneParticipating()){this.hangup()}}__onPullEventFinish(e){this.destroy()}__onPullEventSwitchTrackRecordStatus(e){this.eventEmitter.emit(BX.Call.Event.onSwitchTrackRecordStatus,[{senderId:e.senderId,isTrackRecordOn:e.isTrackRecordOn}])}__onLocalDevicesUpdated(e){this.log("__onLocalDevicesUpdated",e)}__onLocalVideoStreamReceived(e){this.log("__onLocalVideoStreamReceived");this.eventEmitter.emit(BX.Call.Event.onLocalMediaReceived,[e])}__onLocalVideoStreamRemoved(){this.eventEmitter.emit(BX.Call.Event.onLocalMediaStopped)}__onSDKLogMessage(e){if(this.logger){this.log(e)}}__onCallDisconnected(e){let t={};const i=e&&typeof e==="object"?e:{};const{headers:n}=i;if(n){t={...t,headers:n}}this.log("__onCallDisconnected",Object.keys(t).length?t:null);if(this.ready&&n.leaveInformation&&n.leaveInformation.reason!==BX.Call.CallError.SecurityKeyChanged){this.hangup(n.leaveInformation.code,n.leaveInformation.reason)}this.ready=false;this.muted=false;this.reinitPeers();if(n.leaveInformation?.reason===BX.Call.CallError.SecurityKeyChanged){this.onFatalError(n.leaveInformation.reason)}else if(n.leaveInformation?.reason===BX.Call.CallError.RoomClosed){this.destroy()}else{this.removeCallEvents();this.bitrixCallDev=null;this.joinStatus=BX.Call.JoinStatus.None}}__onCallReconnecting(){if(!this.ready||!this.bitrixCallDev){return}this._reconnectionEventCount++;this.eventEmitter.emit(BX.Call.Event.onReconnecting,[{reconnectionEventCount:this._reconnectionEventCount}]);CallUtil.getCallConnectionDataById(this.uuid).then((e=>{if(!this.ready||!this.bitrixCallDev){return}if(e.result.mediaServerUrl&&e.result.roomData){const t=this.getSignalingUrl(e.result.mediaServerUrl,e.result.roomData);this.bitrixCallDev.updateSignalingUrl(t)}else{throw new Error("No mediaServerUrl or roomData")}})).catch((e=>{console.error(e);if(this._reconnectionEventCount<this._maxReconnectionAttempts){setTimeout((()=>{this.__onCallReconnecting()}),5e3)}else{this.hangup()}}))}__onCallReconnected(){this._reconnectionEventCount=0;this.eventEmitter.emit(BX.Call.Event.onReconnected)}getMediaServerInfo(e){return new Promise((async(t,i)=>{let n;try{n=await BXClient.getInstance().getMediaServerUrl(e)}catch(e){return i({name:"MEDIA_SERVER_UNREACHABLE",message:`Reason: ${e.reason} ${e.data}`})}t({mediaServerUrl:n.url,roomData:n.roomData})}))}onFatalError(e){if(e&&e.call){delete e.call}CallUtil.error("onFatalError",e);this.log("onFatalError",e);this.ready=false;this.muted=false;this.reinitPeers();if(typeof e==="string"){this.eventEmitter.emit(BX.Call.Event.onCallFailure,[e])}else if(e instanceof Error){this.eventEmitter.emit(BX.Call.Event.onCallFailure,[e.toString()])}else{this.eventEmitter.emit(BX.Call.Event.onCallFailure)}if(this.bitrixCallDev){this.removeCallEvents();try{this.bitrixCallDev.hangup({"X-Reason":"Fatal error","X-Error":typeof e==="string"?e:e.code||e.name})}catch{}this.bitrixCallDev=null}}__onNoAnswer(){if(this.ready&&!this.isAnyoneParticipating()){this.destroy()}}__onCallEndpointAdded(e){clearTimeout(this.waitForAnswerTimeout);if(!this.users.includes(e.endpointId)){this.users.push(e.endpointId)}if(!this.peers[e.endpointId]){this.peers[e.endpointId]=this.createPeer(e.endpointId)}this.eventEmitter.emit(BX.Call.Event.onUserJoined,[{userId:e.endpointId,userData:{[e.endpointId]:{name:e.userName,avatar_hr:e.avatarImage,avatar:e.avatarImage}}}]);const t=typeof e.userDisplayName==="string"?e.userDisplayName:"";this.log(`__onCallEndpointAdded (${t})`);if(BX.type.isNotEmptyString(t)&&t.slice(0,4)=="user"){const i=parseInt(t.slice(4));if(this.peers[i]){this.peers[i].setEndpoint(e)}}else{e.on(JNBXEndpoint.Events.InfoUpdated,(()=>{const t=typeof e.userDisplayName==="string"?e.userDisplayName:"";this.log(`BitrixDev.EndpointEvents.InfoUpdated (${t})`,e);if(t.slice(0,4)=="user"){const i=parseInt(t.slice(4));if(this.peers[i]){this.peers[i].setEndpoint(e)}}}));this.log(`Unknown endpoint ${t}`)}}__onCallRecorderStatusChanged(e){if(!e.errMsg){this._recorderState=e.code}const t=this._recorderState===BX.Call.RecorderStatus.Enabled;this.eventEmitter.emit(BX.Call.Event.onRecorderStatusChanged,[{status:t,error:e.errMsg}])}__onUsersInvited=e=>{this.log("__onUsersInvited",e);const t=e.users;const i=e.show;if(this.type===CallType.Instant){this.addInvitedUsers(t)}};__onUserInviteTimeout=e=>{this.log("__onUserInviteTimeout",e);const t=e.failedUserId;if(this.peers[t]){this.peers[t].onInviteTimeout(false)}};__onCallMessageReceived(e,t){let n;try{n=JSON.parse(t.message)}catch(e){this.log("Could not parse scenario message.",e);return}if(n.onActionSent){this.__onActionSentHandler(n.onActionSent);return}const s=n.eventName;switch(s){case i.voiceStarted:{if(n.senderId==this.userId){this.requestFloor(false)}this.eventEmitter.emit(BX.Call.Event.onUserVoiceStarted,[n.senderId]);break}case i.voiceStopped:{this.eventEmitter.emit(BX.Call.Event.onUserVoiceStopped,[n.senderId]);break}case i.microphoneState:{this.eventEmitter.emit(BX.Call.Event.onUserMicrophoneState,[n.senderId,n.microphoneState==="Y"]);break}case i.screenState:{this.eventEmitter.emit(BX.Call.Event.onUserScreenState,[n.senderId,n.screenState==="Y"]);break}case i.videoPaused:{this.eventEmitter.emit(BX.Call.Event.onUserVideoPaused,[n.senderId,n.videoPaused==="Y"]);break}case i.floorRequest:{this.eventEmitter.emit(BX.Call.Event.onUserFloorRequest,[n.senderId,n.requestActive==="Y"]);break}case i.emotion:{this.eventEmitter.emit(BX.Call.Event.onUserEmotion,[n.senderId,n.toUserId,n.emotion]);break}case i.recordState:{this.eventEmitter.emit(BX.Call.Event.onRecordState,[n.recordState.state]);break}case i.usersInvited:{this.__onUsersInvited(n);break}case i.userInviteTimeout:{this.__onUserInviteTimeout(n);break}case"scenarioLogUrl":{CallUtil.warn(`scenario log url: ${n.logUrl}`);break}default:{this.log(`Unknown scenario event ${s}`)}}}__onUsersLimitExceeded(){this.log(`__onUsersLimitExceeded`);this.eventEmitter.emit(BX.Call.Event.onUsersLimitExceeded)}__onSignalingResponseReceived(e){if(e&&e.response){if(typeof e.response!=="string")return;let t;try{t=JSON.parse(e.response)}catch(t){this.log(`Could not parse a socket message: ${e.response}`);return}if(t?.joinResponse){if(t.joinResponse.role){CallUtil.setCurrentUserRole(t.joinResponse.role)}if(t.joinResponse.permissions&&!this._reconnectionEventCount){this.__setUserPermissions(t.joinResponse.permissions)}if(t.joinResponse.roomState&&!this._reconnectionEventCount){CallUtil.setRoomPermissions(t.joinResponse.roomState);CallUtil.setUserPermissionsByRoomPermissions(t.joinResponse.roomState)}}}}__setUserPermissions(e){try{let t=JSON.parse(e);CallUtil.setUserPermissions(t)}catch(t){this.log(`Could not parse a permissions JSON: ${e}  ${t.message}`)}}__onMuteParticipant(e){const t=e.track.type;switch(t){case 0:{this.eventEmitter.emit(BX.Call.Event.onParticipantAudioMuted,[e]);break}case 1:{this.eventEmitter.emit(BX.Call.Event.onParticipantVideoMuted,[e]);break}case 2:{this.eventEmitter.emit(BX.Call.Event.onParticipantScreenshareMuted,[e]);break}}}__onMuteAllParticipants(e){const t=e.track.type;switch(t){case 0:{this.eventEmitter.emit(BX.Call.Event.onAllParticipantsAudioMuted,[e]);break}case 1:{this.eventEmitter.emit(BX.Call.Event.onAllParticipantsVideoMuted,[e]);break}case 2:{this.eventEmitter.emit(BX.Call.Event.onAllParticipantsScreenshareMuted,[e]);break}}}__settingsChangedHandler(e){e.calledFrom="settingsChanged";let t=CallUtil.getRoomPermissions();let i={reason:"settings",eft:e.eft,fromUserId:e.fromUserId,track:{type:0}};switch(e.act){case"audio":i.track.type=0;t.AudioEnabled=e.roomState.AudioEnabled;break;case"video":i.track.type=1;t.VideoEnabled=e.roomState.VideoEnabled;break;case"screen_share":i.track.type=2;t.ScreenShareEnabled=e.roomState.ScreenShareEnabled;break}CallUtil.setRoomPermissions(t);CallUtil.updateUserPermissionByNewRoomPermission(e.act,!e.eft);if(e.eft===true){this.__onMuteAllParticipants(i)}this.eventEmitter.emit(BX.Call.Event.onRoomSettingsChanged,[e])}__userPermissionsChanged(e){if(e.allow===true&&CallUtil.isRegularUser(CallUtil.getCurrentUserRole())&&this.userId==e.toUserId){let t=CallUtil.getUserPermissions();t.audio=e.allow;t.video=e.allow;t.screen_share=e.allow;CallUtil.setUserPermissions(t)}this.eventEmitter.emit(BX.Call.Event.onUserPermissionsChanged,[e])}__onActionSentHandler(e){if(e.changeSettings){this.__settingsChangedHandler(e.changeSettings)}else if(e.givePermissions){this.__userPermissionsChanged(e.givePermissions)}else if(e.participantMuted){this.__onMuteParticipant(e.participantMuted)}else if(e.allParticipantsMuted){this.__onMuteAllParticipants(e.allParticipantsMuted)}}destroy(){this.ready=false;this._joinStatus=BX.Call.JoinStatus.None;if(this.bitrixCallDev){this.removeCallEvents();if(this.bitrixCallDev){this.bitrixCallDev.hangup()}this.bitrixCallDev=null}for(const e in this.peers){if(this.peers.hasOwnProperty(e)&&this.peers[e]){this.peers[e].destroy()}}if(this.logger){this.logger.destroy();this.logger=null}this.removeClientEvents();this.eventEmitter.emit(BX.Call.Event.onDestroy,[{callUuid:this.uuid}]);this.eventEmitter=null;if(this.signaling){this.signaling.call=null;this.signaling=null}}}const r={accessToken:null,accessTokenTtl:null,get token(){if(this.accessToken&&this.accessTokenTtl&&Date.now()<this.accessTokenTtl){return this.accessToken}return null},setAccessToken(e,t){this.accessToken=e;this.accessTokenTtl=Date.now()+t*1e3},get server(){return BX.componentParameters.get("voximplantServer","")},set server(e){BX.componentParameters.set("voximplantServer",e)},get login(){return BX.componentParameters.get("voximplantLogin","")},set login(e){BX.componentParameters.set("voximplantLogin",e)},getAuthorization(){return new Promise(((e,t)=>{if(this.server){return e({server:this.server,login:this.login})}CallUtil.log("Calling voximplant.authorization.get");BX.rest.callMethod("voximplant.authorization.get").then((t=>{const i=t.data();this.server=i.SERVER;this.login=i.LOGIN;return e({server:this.server,login:this.login})})).catch((e=>{console.error(e);t(e)}))}))},tryLoginWithToken(e){return new Promise(((t,i)=>{if(!("loginWithAccessToken"in e)){return i()}if(this.token){CallUtil.log("Trying to login with saved access token");this.getAuthorization().then((n=>{const s=n.login;const a=n.server;e.loginWithAccessToken(`${s}@${a}`,this.token).then((e=>{CallUtil.log("success",e);console.log(e);if("params"in e&&"accessToken"in e.params){this.setAccessToken(e.params.accessToken,e.params.accessExpire)}t()})).catch((e=>{console.error(e);i(e)}))})).catch((e=>{console.error(e);i(e)}))}else{return i()}}))},tryLoginWithOneTimeKey(e,t){return new Promise(((i,n)=>{e.requestOneTimeKey(t.id,t.endpoint,t.token).then((t=>{CallUtil.warn("ontimekey received");CallUtil.warn("ontimekey signed");i(e)})).catch((e=>{n(e)}))}))},getClient(){return new Promise(((e,t)=>{const i=BXClient.getInstance();if(i.getClientState()==="LOGGED_IN"){return e(i)}const n=t=>{CallUtil.warn("connected");t.off(BXClient.Events.Failed,s);t.off(BXClient.Events.Connected,n);this.tryLoginWithToken(t).then((()=>e(t))).catch((()=>e(t)))};let s=(e,i)=>{CallUtil.error(e,i);e.off(BXClient.Events.Failed,s);e.off(BXClient.Events.Connected,n);t(i)};return e(i)}))}};class l{constructor(e){this.call=e.call}isPublishingEnabled(){return false}inviteUsers(t){return this.__runRestAction(e.invite,t)}sendVoiceStarted(e){return this.__sendMessage(i.voiceStarted,e)}sendVoiceStopped(e){return this.__sendMessage(i.voiceStopped,e)}sendMicrophoneState(e){return this.__sendMessage(i.microphoneState,{microphoneState:e?"Y":"N"})}sendCameraState(e){return this.__sendMessage(i.cameraState,{cameraState:e?"Y":"N"})}sendVideoPaused(e){return this.__sendMessage(i.videoPaused,{videoPaused:e?"Y":"N"})}sendScreenState(e){return this.__sendMessage(i.screenState,{screenState:e?"Y":"N"})}sendFloorRequest(e){return this.__sendMessage(i.floorRequest,{requestActive:e?"Y":"N"})}sendEmotion(e,t){return this.__sendMessage(i.emotion,{toUserId:e,emotion:t})}sendShowUsers(e){this.call.log(`Show video from users ${BX.type.isArray(e)?e.join("; "):e}`);return this.__sendMessage(i.showUsers,{users:e})}sendShowAll(){return this.__sendMessage(i.showAll,{})}sendHideAll(){return this.__sendMessage(i.hideAll,{})}sendRepeatAnswer(e){this.__sendPullEvent(t.repeatAnswer,e)}sendUserInviteTimeout(e){return this.__sendMessage(i.userInviteTimeout,{data:e})}getPublishingState(){return BX.PULL.getPublishingState()}__sendPullEvent(e,t,i){i=i||5;if(!t.userId){throw new Error("userId is not found in data")}if(!BX.type.isArray(t.userId)){t.userId=[t.userId]}if(t.userId.length===0){return}t.callInstanceId=this.call.instanceId;t.senderId=this.call.userId;t.callUuid=this.call.uuid;t.requestId=callEngine.getUuidv4();this.call.log(`Sending p2p signaling event ${e}; ${JSON.stringify(t)}`);BX.PULL.sendMessage(t.userId,"im",e,t,i)}__sendMessage(e,t){if(!this.call.bitrixCallDev){return}if(!BX.type.isPlainObject(t)){t={}}t.eventName=e;t.requestId=callEngine.getUuidv4();this.call.bitrixCallDev.sendMessage(JSON.stringify(t))}__runRestAction(e,t){if(!BX.type.isPlainObject(t)){t={}}t.callUuid=this.call.uuid;t.callInstanceId=this.call.instanceId;t.requestId=callEngine.getUuidv4();return callEngine.getRestClient().callMethod(e,t)}__sendPullEventOrCallRest(e,t,i,n){this.getPublishingState().then((s=>{if(s){this.__sendPullEvent(e,i,n)}else if(t!=""){this.__runRestAction(t,i)}})).catch((e=>{CallUtil.error(e);this.call.log(e)}))}}class d{constructor(e){this.userId=e.userId;this.call=e.call;this.ready=!!e.ready;this.calling=false;this.declined=false;this.busy=false;this.inviteTimeout=false;this.endpoint=null;this.isIncomingVideoAllowed=e.isIncomingVideoAllowed!==false;this.callingTimeout=0;this.connectionRestoreTimeout=0;this.waitForAnswerTimeout=null;this.callbacks={onStateChanged:BX.type.isFunction(e.onStateChanged)?e.onStateChanged:BX.DoNothing,onInviteTimeout:BX.type.isFunction(e.onInviteTimeout)?e.onInviteTimeout:BX.DoNothing,onStreamReceived:BX.type.isFunction(e.onStreamReceived)?e.onStreamReceived:BX.DoNothing,onUserVoiceStarted:BX.type.isFunction(e.onUserVoiceStarted)?e.onUserVoiceStarted:BX.DoNothing,onUserVoiceStopped:BX.type.isFunction(e.onUserVoiceStopped)?e.onUserVoiceStopped:BX.DoNothing,onInitialState:BX.type.isFunction(e.onInitialState)?e.onInitialState:BX.DoNothing,onHandRaised:BX.type.isFunction(e.onHandRaised)?e.onHandRaised:BX.DoNothing};this.__onEndpointRemoteMediaAddedHandler=this.__onEndpointRemoteMediaAdded.bind(this);this.__onEndpointRemoteMediaRemovedHandler=this.__onEndpointRemoteMediaRemoved.bind(this);this.__onEndpointVoiceStartedHandler=this.__onEndpointVoiceStarted.bind(this);this.__onEndpointVoiceStoppedHandler=this.__onEndpointVoiceStopped.bind(this);this.__onEndpointRemovedHandler=this.__onEndpointRemoved.bind(this);this.__onEndpointHandRaisedHandler=this.__onEndpointHandRaised.bind(this);this.calculatedState=this.calculateState()}setReady(e){e=!!e;if(this.ready==e){return}this.ready=e;if(this.calling){clearTimeout(this.callingTimeout);this.calling=false;this.inviteTimeout=false}if(this.ready){this.declined=false;this.busy=false}else{clearTimeout(this.connectionRestoreTimeout)}this.updateCalculatedState()}setDeclined(e){this.declined=e;if(this.calling){clearTimeout(this.callingTimeout);this.calling=false}if(this.declined){this.ready=false;this.busy=false}clearTimeout(this.connectionRestoreTimeout);this.updateCalculatedState()}setBusy(e){this.busy=e;if(this.calling){clearTimeout(this.callingTimeout);this.calling=false}if(this.busy){this.ready=false;this.declined=false}clearTimeout(this.connectionRestoreTimeout);this.updateCalculatedState()}setEndpoint(e){this.log(`Adding endpoint with ${e.remoteVideoStreams.length} remote video streams`);this.inviteTimeout=false;this.declined=false;clearTimeout(this.connectionRestoreTimeout);clearTimeout(this.callingTimeout);if(this.endpoint){this.removeEndpointEventHandlers();this.endpoint=null}this.endpoint=e;if(this.endpoint.remoteVideoStreams.length>0){this.callbacks.onStreamReceived({userId:this.userId,stream:CallUtil.isNewMobileGridEnabled()?this.getStreams():this.getPriorityStream()})}if(this.ready===true){this.updateCalculatedState()}else{this.setReady(true)}this.bindEndpointEventHandlers();if(e.initialState){this.callbacks.onInitialState({userId:this.userId,microphoneState:e.initialState.microphoneState,floorRequest:e.initialState.floorRequest})}}allowIncomingVideo(e){if(this.isIncomingVideoAllowed==e){return}this.isIncomingVideoAllowed=!!e}bindEndpointEventHandlers(){this.endpoint.on(JNBXEndpoint.Events.VideoStreamAdded,this.__onEndpointRemoteMediaAddedHandler);this.endpoint.on(JNBXEndpoint.Events.VideoStreamRemoved,this.__onEndpointRemoteMediaRemovedHandler);this.endpoint.on(JNBXEndpoint.Events.VoiceStarted,this.__onEndpointVoiceStartedHandler);this.endpoint.on(JNBXEndpoint.Events.VoiceStopped,this.__onEndpointVoiceStoppedHandler);this.endpoint.on(JNBXEndpoint.Events.Removed,this.__onEndpointRemovedHandler);this.endpoint.on(JNBXEndpoint.Events.HandRaised,this.__onEndpointHandRaisedHandler)}removeEndpointEventHandlers(){this.endpoint.off(JNBXEndpoint.Events.VideoStreamAdded,this.__onEndpointRemoteMediaAddedHandler);this.endpoint.off(JNBXEndpoint.Events.VideoStreamRemoved,this.__onEndpointRemoteMediaRemovedHandler);this.endpoint.off(JNBXEndpoint.Events.VoiceStarted,this.__onEndpointVoiceStartedHandler);this.endpoint.off(JNBXEndpoint.Events.VoiceStopped,this.__onEndpointVoiceStoppedHandler);this.endpoint.off(JNBXEndpoint.Events.Removed,this.__onEndpointRemovedHandler);this.endpoint.off(JNBXEndpoint.Events.HandRaised,this.__onEndpointHandRaisedHandler)}calculateState(){if(this.endpoint){return BX.Call.UserState.Connected}if(this.calling){return BX.Call.UserState.Calling}if(this.inviteTimeout){return BX.Call.UserState.Unavailable}if(this.declined){return BX.Call.UserState.Declined}if(this.busy){return BX.Call.UserState.Busy}if(this.ready){return BX.Call.UserState.Ready}return BX.Call.UserState.Idle}updateCalculatedState(){const e=this.calculateState();if(this.calculatedState!=e){this.callbacks.onStateChanged({userId:this.userId,state:e,previousState:this.calculatedState});this.calculatedState=e}}isParticipating(e){if(!(typeof e==="boolean")){e=true}if(e){return(this.calling||this.ready||this.endpoint)&&!this.declined}return(this.ready||this.endpoint)&&!this.declined}waitForConnectionRestore(){clearTimeout(this.connectionRestoreTimeout);this.connectionRestoreTimeout=setTimeout(this.onConnectionRestoreTimeout.bind(this),s)}onInvited(){this.ready=false;this.inviteTimeout=false;this.declined=false;this.calling=true;clearTimeout(this.connectionRestoreTimeout);if(this.callingTimeout){clearTimeout(this.callingTimeout)}this.callingTimeout=setTimeout((()=>this.onInviteTimeout(true)),a);this.updateCalculatedState()}onInviteTimeout(e){clearTimeout(this.callingTimeout);if(!this.calling){return}this.calling=false;this.inviteTimeout=true;if(e){this.callbacks.onInviteTimeout({userId:this.userId})}this.updateCalculatedState()}onConnectionRestoreTimeout(){if(this.endpoint||!this.ready){return}this.log("Done waiting for connection restoration");this.setReady(false)}__onEndpointRemoteMediaAdded(e){this.log("RemoteMediaAdded",e);this.callbacks.onStreamReceived({userId:this.userId,stream:CallUtil.isNewMobileGridEnabled()?this.getStreams():this.getPriorityStream()});this.updateCalculatedState()}__onEndpointRemoteMediaRemoved(e){console.log(e);this.log("Remote media removed");this.callbacks.onStreamReceived({userId:this.userId,stream:CallUtil.isNewMobileGridEnabled()?this.getStreams():this.getPriorityStream()});this.updateCalculatedState()}__onEndpointVoiceStarted(e){this.log("Voice started");this.callbacks.onUserVoiceStarted({userId:this.userId})}__onEndpointVoiceStopped(e){this.log("Voice stopped");this.callbacks.onUserVoiceStopped({userId:this.userId})}__onEndpointRemoved(e){this.log("Endpoint removed");if(this.endpoint){this.removeEndpointEventHandlers();this.endpoint=null}if(this.ready){this.waitForConnectionRestore()}this.updateCalculatedState()}__onEndpointHandRaised(e){this.log("Endpoint hand raised");this.callbacks.onHandRaised({userId:this.userId,isHandRaised:e.isHandRaised})}getPriorityStream(){let e=this.endpoint.remoteVideoStreams;if(e.length==0){return null}let t=e.findLast((e=>e.kind==="sharing"));if(t===undefined){return e[e.length-1]}else{return t}}getStreams(){let e=this.endpoint.remoteVideoStreams;if(e.length==0){return null}return e}log(){this.call&&this.call.log.apply(this.call,arguments)}destroy(){if(this.endpoint){this.removeEndpointEventHandlers();this.endpoint=null}this.callbacks.onStateChanged=BX.DoNothing;this.callbacks.onStreamReceived=BX.DoNothing;this.callbacks.onUserVoiceStarted=BX.DoNothing;this.callbacks.onUserVoiceStopped=BX.DoNothing;this.callbacks.onInitialState=BX.DoNothing;this.callbacks.onHandRaised=BX.DoNothing;clearTimeout(this.callingTimeout);clearTimeout(this.connectionRestoreTimeout);this.callingTimeout=null;this.connectionRestoreTimeout=null;this.call=null}}window.BitrixCallJwt=o})();
//# sourceMappingURL=extension.map.js