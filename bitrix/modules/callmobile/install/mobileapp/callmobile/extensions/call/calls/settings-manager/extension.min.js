jn.define("call/settings-manager",((l,a,t)=>{class e{constructor(){this.jwtCallsEnabled=BX.componentParameters.get("jwtCallsEnabled");this.plainCallsUseJwt=BX.componentParameters.get("jwtInPlainCallsEnabled");this.callBalancerUrl=BX.componentParameters.get("callBalancerUrl")}setup(l){if(l.jwtCallsEnabled!==undefined){this.jwtCallsEnabled=l.jwtCallsEnabled}if(l.plainCallsUseJwt!==undefined){this.plainCallsUseJwt=l.plainCallsUseJwt}if(l.callBalancerUrl!==undefined){this.callBalancerUrl=l.callBalancerUrl}}get jwtCallsEnabled(){return this._jwtCallsEnabled}set jwtCallsEnabled(l){this._jwtCallsEnabled=l}get plainCallsUseJwt(){return this._plainCallsUseJwt}set plainCallsUseJwt(l){this._plainCallsUseJwt=l}get callBalancerUrl(){return this._callBalancerUrl}set callBalancerUrl(l){this._callBalancerUrl=l}isJwtInPlainCallsEnabled(){return this.isJwtCallsEnabled()&&this.plainCallsUseJwt}isJwtCallsEnabled(){return this.isJwtCallsSupported&&this.jwtCallsEnabled}isJwtCallsSupported(){return"startCall"in BXClient.getInstance()}}t.exports={CallSettingsManager:new e}}));
//# sourceMappingURL=extension.map.js