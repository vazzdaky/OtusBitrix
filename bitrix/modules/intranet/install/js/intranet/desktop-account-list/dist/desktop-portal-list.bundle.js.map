{"version":3,"file":"desktop-portal-list.bundle.js","sources":["../src/item.js","../src/content.js","../src/popup.js","../src/desktop-portal-list.js"],"sourcesContent":["import { Cache, Event, Tag, Loc } from 'main.core';\nimport { AvatarBase, AvatarRound } from 'ui.avatar';\nimport { Menu } from 'main.popup';\nimport type { DesktopAccount } from 'im.v2.lib.desktop-api';\nimport { DesktopApi } from 'im.v2.lib.desktop-api';\nimport {EventEmitter} from \"main.core.events\";\n\nexport type ItemOptions = {\n\taccount: DesktopAccount,\n\tisCurrent: boolean,\n};\n\nexport class Item\n{\n\t#cache = new Cache.MemoryCache();\n\n\tconstructor(options: ItemOptions)\n\t{\n\t\tthis.#setOptions(options);\n\t}\n\n\tgetContainer(): HTMLElement\n\t{\n\t\treturn this.#cache.remember('container', () => {\n\t\t\treturn Tag.render`\n\t\t\t\t<div class=\"intranet-desktop-portal-list-item__wrapper\">\n\t\t\t\t\t<div class=\"intranet-desktop-portal-list-item__avatar\">\n\t\t\t\t\t\t${this.#getAvatar().getContainer()}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"intranet-desktop-portal-list-item__info-wrapper\">\n\t\t\t\t\t\t${this.#getHost()}\n\t\t\t\t\t\t${this.#getEmail()}\n\t\t\t\t\t</div>\n\t\t\t\t\t${this.#getMoreMenu()}\n\t\t\t\t</div>\n\t\t\t`;\n\t\t});\n\t}\n\n\t#setOptions(options: ItemOptions): Item\n\t{\n\t\tthis.#cache.set('options', options);\n\n\t\treturn this;\n\t}\n\n\t#getOptions(): ItemOptions\n\t{\n\t\treturn this.#cache.get('options', {});\n\t}\n\n\t#getMoreMenu(): HTMLElement\n\t{\n\t\treturn this.#cache.remember('moreMenuElement', () => {\n\t\t\tconst element = Tag.render`\n\t\t\t\t<i class=\"ui-icon-set --more-l intranet-desktop-portal-list-item__more\"/>\n\t\t\t`;\n\t\t\tconst menu = new Menu({\n\t\t\t\tbindElement: element,\n\t\t\t\titems: [\n\t\t\t\t\tthis.#getOptions().account.connected\n\t\t\t\t\t\t? {\n\t\t\t\t\t\t\ttext: 'Выйти',\n\t\t\t\t\t\t\tonclick: () => {\n\t\t\t\t\t\t\t\tDesktopApi.disconnectAccount(this.#getOptions().account.host);\n\t\t\t\t\t\t\t\tmenu.close();\n\t\t\t\t\t\t\t\tEventEmitter.emit('BX.Intranet.DesktopPortalList.Item:change');\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t} : {\n\t\t\t\t\t\t\ttext: 'Перейти',\n\t\t\t\t\t\t\tonclick: () => {\n\t\t\t\t\t\t\t\tDesktopApi.connectAccount(\n\t\t\t\t\t\t\t\t\tthis.#getOptions().account.host,\n\t\t\t\t\t\t\t\t\tthis.#getOptions().account.login,\n\t\t\t\t\t\t\t\t\tthis.#getOptions().account.protocol,\n\t\t\t\t\t\t\t\t\tnavigator.language,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tmenu.close();\n\t\t\t\t\t\t\t\tEventEmitter.emit('BX.Intranet.DesktopPortalList.Item:change');\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttext: 'Убрать из списка',\n\t\t\t\t\t\tonclick: () => {\n\t\t\t\t\t\t\tDesktopApi.deleteAccount(this.#getOptions().account.host, this.#getOptions().account.login);\n\t\t\t\t\t\t\tmenu.close();\n\t\t\t\t\t\t\tEventEmitter.emit('BX.Intranet.DesktopPortalList.Item:change');\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t});\n\t\t\tEvent.bind(element, 'click', (event) => {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tevent.stopPropagation();\n\t\t\t\tmenu.toggle();\n\t\t\t});\n\n\t\t\treturn element;\n\t\t});\n\t}\n\n\t#getAvatar(): AvatarBase\n\t{\n\t\tconst options = {\n\t\t\tsize: 36,\n\t\t\tuserpicPath: encodeURI(this.#getOptions().account.avatar),\n\t\t};\n\n\t\treturn new AvatarRound(options);\n\t}\n\n\t#getHost(): HTMLElement\n\t{\n\t\treturn Tag.render`\n\t\t\t<div class=\"intranet-desktop-portal-list-item__title-wrapper\">\n\t\t\t\t<span class=\"intranet-desktop-portal-list-item__title${this.#getOptions().isCurrent ? ' --current' : ''}\">${this.#getOptions().account.host}</span>\n\t\t\t\t${this.#getStatus()}\n\t\t\t</div>\n\t\t`;\n\t}\n\n\t#getStatus(): ?HTMLElement\n\t{\n\t\tif (!this.#getOptions().isCurrent)\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this.#cache.remember('statusElement', () => {\n\t\t\treturn Tag.render`\n\t\t\t\t<span class=\"intranet-desktop-portal-list-item__status\">${Loc.getMessage('INTRANET_DESKTOP_PORTAL_LIST_CURREN_STATUS')}</span>\n\t\t\t`;\n\t\t});\n\t}\n\n\t#getEmail(): HTMLElement\n\t{\n\t\treturn Tag.render`\n\t\t\t<span class=\"intranet-desktop-portal-list-item__description\">${this.#getOptions().account.email}</span>\n\t\t`;\n\t}\n}\n","import { ConfigOptions } from './types';\nimport { Cache, Dom, Loc, Tag } from 'main.core';\nimport { Item } from './item';\nimport { DesktopApi } from 'im.v2.lib.desktop-api';\nimport type { DesktopAccount } from 'im.v2.lib.desktop-api';\nimport {EventEmitter} from \"main.core.events\";\n\nexport class Content\n{\n\t#cache = new Cache.MemoryCache();\n\n\tgetAccounts(): Array<DesktopAccount>\n\t{\n\t\treturn this.#cache.remember('accounts', () => {\n\t\t\treturn (typeof BXDesktopSystem === 'undefined') ? [] : DesktopApi.getAccountList();\n\t\t});\n\t}\n\n\tgetCurrentAccount(): ?DesktopAccount\n\t{\n\t\treturn this.#cache.remember('currentAccount', () => {\n\t\t\tconst currentUserId = Loc.getMessage('USER_ID');\n\t\t\tconst accounts = this.getAccounts();\n\t\t\tconst currentHost = location.host;\n\n\t\t\treturn accounts.find((account) => account.id === currentUserId && currentHost === account.host);\n\t\t});\n\t}\n\n\tgetContent(): Array<ConfigOptions>\n\t{\n\t\treturn [\n\t\t\tthis.#getCurrentPortal(),\n\t\t\tthis.#getPanel(),\n\t\t\tthis.#getPortalList(),\n\t\t];\n\t}\n\n\t#getCurrentPortal(): ConfigOptions\n\t{\n\t\treturn this.#cache.remember('currentPortal', () => {\n\t\t\tif (!this.getCurrentAccount())\n\t\t\t{\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst item = new Item({\n\t\t\t\taccount: this.getCurrentAccount(),\n\t\t\t\tisCurrent: true,\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\thtml: item.getContainer(),\n\t\t\t};\n\t\t});\n\t}\n\n\t#getPanel(): ConfigOptions\n\t{\n\t\treturn this.#cache.remember('panel', () => {\n\t\t\tconst onclick = () => {\n\t\t\t\tDesktopApi.openAddAccountTab();\n\t\t\t\tEventEmitter.emit('BX.Intranet.DesktopPortalList:openConnector');\n\t\t\t};\n\n\t\t\treturn {\n\t\t\t\thtml: Tag.render`\n\t\t\t\t\t<div onclick=\"${onclick}\" class=\"intranet-desktop-portal-list-item-list-header__wrapper\">\n\t\t\t\t\t\t<span class=\"intranet-desktop-portal-list-item-list-header__title\">Подключенные Битрикс24</span>\n\t\t\t\t\t\t<div class=\"intranet-desktop-portal-list-item-list-header__connect-wrapper\">\n\t\t\t\t\t\t\t<i class=\"ui-icon-set --plus-s intranet-desktop-portal-list-item-list-header__connect-icon\"></i>\n\t\t\t\t\t\t\t<span class=\"intranet-desktop-portal-list-item-list-header__connect-title\">Подключить</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t`,\n\t\t\t\twithoutBackground: true,\n\t\t\t};\n\t\t});\n\t}\n\n\t#getPortalList(): ConfigOptions\n\t{\n\t\treturn this.#cache.remember('portalList', () => {\n\t\t\tconst container = Tag.render`\n\t\t\t\t<div class=\"intranet-desktop-portal-list-item-list__wrapper\"></div>\n\t\t\t`;\n\n\t\t\tthis.getAccounts().forEach((account) => {\n\t\t\t\tif (account !== this.getCurrentAccount())\n\t\t\t\t{\n\t\t\t\t\tconst item = new Item({\n\t\t\t\t\t\taccount,\n\t\t\t\t\t\tisCurrent: false,\n\t\t\t\t\t});\n\n\t\t\t\t\tDom.append(item.getContainer(), container);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\thtml: container,\n\t\t\t};\n\t\t});\n\t}\n}\n","import { EventEmitter } from 'main.core.events';\nimport { Cache } from 'main.core';\nimport { PopupComponentsMaker } from 'ui.popupcomponentsmaker';\nimport { Content } from './content';\nimport type { ConfigOptions } from './types';\n\ntype PopupOptions = {\n\tbindElement: HTMLElement,\n};\n\nexport class Popup extends EventEmitter\n{\n\t#cache = new Cache.MemoryCache();\n\n\tconstructor(options: PopupOptions)\n\t{\n\t\tsuper();\n\t\tthis.#setOptions(options);\n\t\tthis.setEventNamespace('BX.Intranet.DesktopPortalList.Popup');\n\n\t\tEventEmitter.subscribe('BX.Intranet.DesktopPortalList.Item:change', () => {\n\t\t\tthis.#getBasePopup().close();\n\t\t\tthis.#cleanCache();\n\t\t});\n\t\tEventEmitter.subscribe('BX.Intranet.DesktopPortalList:openConnector', () => {\n\t\t\tthis.#getBasePopup().close();\n\t\t\tthis.#cleanCache();\n\t\t});\n\t}\n\n\tshow(): void\n\t{\n\t\tif (!this.#getBasePopup().isShown())\n\t\t{\n\t\t\tthis.#getBasePopup().show();\n\t\t}\n\t}\n\n\t#setOptions(options: PopupOptions): Popup\n\t{\n\t\tthis.#cache.set('options', options);\n\n\t\treturn this;\n\t}\n\n\t#getOptions(): PopupOptions\n\t{\n\t\treturn this.#cache.get('options', {});\n\t}\n\n\t#getBasePopup(): PopupComponentsMaker\n\t{\n\t\treturn this.#cache.remember('popup', () => {\n\t\t\treturn new PopupComponentsMaker({\n\t\t\t\ttarget: this.#getOptions().bindElement,\n\t\t\t\twidth: 450,\n\t\t\t\tcontent: this.#getContent(),\n\t\t\t});\n\t\t});\n\t}\n\n\t#getContent(): Array<ConfigOptions>\n\t{\n\t\treturn this.#cache.remember('content', () => {\n\t\t\treturn (new Content()).getContent();\n\t\t});\n\t}\n\n\t#cleanCache(): void\n\t{\n\t\tthis.#cache.delete('popup');\n\t\tthis.#cache.delete('content');\n\t}\n}\n","import { EventEmitter } from 'main.core.events';\nimport { Popup } from './popup';\nimport { Cache } from 'main.core';\nimport './style.css';\n\ntype DesktopPortalListOptions = {\n\tbindElement: HTMLElement,\n}\n\nexport class DesktopPortalList extends EventEmitter\n{\n\t#cache = new Cache.MemoryCache();\n\n\tconstructor(options: DesktopPortalListOptions)\n\t{\n\t\tsuper();\n\t\tthis.#setOptions(options);\n\t\tthis.setEventNamespace('BX.Intranet.DesktopPortalList');\n\t}\n\n\tshow(): void\n\t{\n\t\tthis.#getPopup().show();\n\t}\n\n\t#setOptions(options: DesktopPortalListOptions): DesktopPortalList\n\t{\n\t\tthis.#cache.set('options', options);\n\n\t\treturn this;\n\t}\n\n\t#getOptions(): DesktopPortalListOptions\n\t{\n\t\treturn this.#cache.get('options', {});\n\t}\n\n\t#getPopup(): Popup\n\t{\n\t\treturn this.#cache.remember('popup', () => {\n\t\t\treturn new Popup({\n\t\t\t\tbindElement: this.#getOptions().bindElement,\n\t\t\t});\n\t\t});\n\t}\n}\n"],"names":["Item","constructor","options","Object","value","writable","Cache","MemoryCache","babelHelpers","getContainer","remember","Tag","render","this","set","get","element","menu","Menu","bindElement","items","account","connected","text","onclick","DesktopApi","disconnectAccount","host","close","EventEmitter","emit","connectAccount","login","protocol","navigator","language","deleteAccount","Event","bind","event","preventDefault","stopPropagation","toggle","size","userpicPath","encodeURI","avatar","AvatarRound","isCurrent","Loc","getMessage","email","Content","[object Object]","getAccounts","BXDesktopSystem","getAccountList","getCurrentAccount","currentUserId","accounts","currentHost","location","find","id","getContent","html","openAddAccountTab","withoutBackground","container","forEach","item","Dom","append","Popup","super","setEventNamespace","subscribe","show","isShown","PopupComponentsMaker","target","width","content","delete","DesktopPortalList"],"mappings":"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"}