{"version":3,"file":"model.bundle.js","sources":["../src/model.js"],"sourcesContent":["import { ajax as Ajax, Text, Type } from 'main.core';\n\ndeclare type ModelData = {\n    id: ?number,\n    entityTypeId: ?number,\n};\n\ndeclare type getParameters = {\n    analyticsLabel: ?string,\n    context: ?string,\n}\n\nexport type Actions = {\n\tget: ?string,\n\tadd: ?string,\n\tupdate: ?string,\n\tdelete: ?string,\n};\n\n/**\n * @abstract\n * @memberOf BX.Crm\n */\nexport class Model\n{\n    data;\n    getParameters;\n    deleted = false;\n    progress = false;\n\n    constructor(data: ModelData, params: ?{\n        getParameters: ?{\n            get: ?getParameters,\n            add: ?getParameters,\n            update: ?getParameters,\n            delete: ?getParameters,\n        }\n    })\n    {\n        this.data = {};\n        if(Type.isPlainObject(data))\n        {\n            this.data = data;\n        }\n        this.getParameters = {\n            add: {},\n            get: {},\n            update: {},\n            delete: {},\n        };\n        if(Type.isPlainObject(params))\n        {\n            this.getParameters = params.getParameters;\n        }\n    }\n\n    get actions(): Actions\n    {\n        return {\n            get: this.compileActionString('get'),\n            add: this.compileActionString('add'),\n            update: this.compileActionString('update'),\n            delete: this.compileActionString('delete'),\n        };\n    }\n\n\t/**\n\t * @protected\n\t * @param action\n\t */\n\tcompileActionString(action: string): string\n\t{\n\t\treturn ('crm.api.' + this.getModelName() + '.' + action);\n\t}\n\n    getId(): ?number\n    {\n\t\tconst id = this.data.id;\n\n        return Type.isNil(id) ? null : Text.toInteger(id);\n    }\n\n    getEntityTypeId(): ?number\n    {\n        return this.data.entityTypeId;\n    }\n\n    isSaved(): boolean\n    {\n        return (this.getId() > 0);\n    }\n\n    isDeleted(): boolean\n\t{\n\t\treturn this.deleted;\n\t}\n\n    setData(data: ModelData): this\n    {\n        this.data = data;\n\n        return this;\n    }\n\n    getData(): ModelData\n    {\n        return this.data;\n    }\n\n    setGetParameters(action: string, parameters: getParameters)\n    {\n        this.getParameters[action] = parameters;\n    }\n\n    getGetParameters(action: string): getParameters\n    {\n        return {\n            ...{\n                analyticsLabel: 'crmModel' + this.getModelName() + action,\n            },\n            ...this.getParameters[action]\n        };\n    }\n\n    /**\n     * @abstract\n     */\n    getModelName(): string\n    {\n        throw new Error('Method \"getModelName\" should be overridden');\n    }\n\n    setDataFromResponse(response: {data: {}})\n    {\n        this.setData(response.data[this.getModelName()]);\n    }\n\n    load(): Promise<{data: {}},string[]>\n    {\n        return new Promise((resolve, reject) => {\n            const errors = [];\n\n            if(this.progress)\n            {\n                errors.push('Another action is in progress');\n                reject(errors);\n                return;\n            }\n\n            if(!this.isSaved())\n            {\n                errors.push('Cant load ' + this.getModelName() + ' without id');\n                reject(errors);\n                return;\n            }\n\n            const action = this.actions.get;\n            if(!Type.isString(action) || action.length <= 0)\n            {\n                errors.push('Load action is not specified');\n                reject(errors);\n                return;\n            }\n\n            this.progress = true;\n            Ajax.runAction(action, {\n                data: {\n                    id: this.getId(),\n                },\n                getParameters: this.getGetParameters('get')\n            }).then((response) => {\n                this.progress = false;\n                this.setDataFromResponse(response);\n                resolve(response);\n            }).catch((response) => {\n                this.progress = false;\n                response.errors.forEach(({message}) => {\n                    errors.push(message);\n                });\n                reject(errors);\n            });\n        });\n    }\n\n    save(): Promise<{data: {}},string[]>\n    {\n        return new Promise((resolve, reject) => {\n            let errors = [];\n\n            if(this.progress)\n            {\n                errors.push('Another action is in progress');\n                reject(errors);\n                return;\n            }\n\n            let action;\n            let data;\n            let getParameters;\n            if(this.isSaved())\n            {\n                action = this.actions.update;\n                data = {\n                    id: this.getId(),\n                    fields: this.getData(),\n                };\n                getParameters = this.getGetParameters('update');\n            }\n            else\n            {\n                action = this.actions.add;\n                data = {\n                    fields: this.getData(),\n                };\n                getParameters = this.getGetParameters('add');\n            }\n\n            if(!Type.isString(action) || action.length <= 0)\n            {\n                errors.push('Save action is not specified');\n                reject(errors);\n                return;\n            }\n\n            this.progress = true;\n            Ajax.runAction(action, {\n                data,\n                getParameters,\n            }).then((response) => {\n                this.progress = false;\n                this.setDataFromResponse(response);\n                resolve(response);\n            }).catch((response) => {\n                this.progress = false;\n                errors = [...errors, ...this.extractErrorMessages(response)];\n                reject(errors);\n            });\n        });\n    }\n\n\t/**\n\t * @protected\n\t * @param errors\n\t */\n\textractErrorMessages({errors}): string[]\n\t{\n\t\tconst errorMessages: string[] = [];\n\t\terrors.forEach( ({message}) => {\n\t\t\tif(Type.isPlainObject(message) && message.text)\n\t\t\t{\n\t\t\t\terrorMessages.push(message.text);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\terrorMessages.push(message);\n\t\t\t}\n\t\t});\n\n\t\treturn errorMessages;\n\t}\n\n    delete(): Promise<{data: {}},string[]>\n    {\n        return new Promise((resolve, reject) => {\n            const errors = [];\n\n            if(this.progress)\n            {\n                errors.push('Another action is in progress');\n                reject(errors);\n                return;\n            }\n\n            if(!this.isSaved())\n            {\n                errors.push('Cant delete ' + this.getModelName() + ' without id');\n                reject(errors);\n                return;\n            }\n\n            const action = this.actions.delete;\n            if(!Type.isString(action) || action.length <= 0)\n            {\n                errors.push('Delete action is not specified');\n                reject(errors);\n                return;\n            }\n\n            this.progress = true;\n            Ajax.runAction(action, {\n                data: {\n                    id: this.getId(),\n                },\n                getParameters: this.getGetParameters('delete'),\n            }).then((response) => {\n                this.deleted = true;\n                this.progress = false;\n                resolve(response);\n            }).catch((response) => {\n                this.progress = false;\n                response.errors.forEach(({message}) => {\n                    errors.push(message);\n                });\n                reject(errors);\n            });\n        });\n    }\n}\n"],"names":["Model","constructor","data","params","deleted","progress","Type","isPlainObject","getParameters","add","get","update","delete","actions","compileActionString","action","getModelName","getId","id","isNil","Text","toInteger","getEntityTypeId","entityTypeId","isSaved","isDeleted","setData","getData","setGetParameters","parameters","getGetParameters","analyticsLabel","Error","setDataFromResponse","response","load","Promise","resolve","reject","errors","push","isString","length","Ajax","runAction","then","catch","forEach","message","save","fields","extractErrorMessages","errorMessages","text"],"mappings":"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"}