{"version":3,"file":"timezone.bundle.js","sources":["../src/timezone.js"],"sourcesContent":["import { Extension } from 'main.core';\n\nclass Timezone\n{\n\tgetOffset(dateTs: number, timeZone: string = this.getTimezone()): number\n\t{\n\t\treturn this.getTimezoneOffset(dateTs, timeZone) + new Date(dateTs).getTimezoneOffset() * 60 * 1000;\n\t}\n\n\tgetTimezoneOffset(dateTs: number, timeZone: string = this.getTimezone()): number\n\t{\n\t\tconst date = new Date(dateTs);\n\t\tconst dateInTimezone = new Date(date.toLocaleString('en-US', { timeZone }));\n\t\tconst dateInUTC = new Date(date.toLocaleString('en-US', { timeZone: 'UTC' }));\n\n\t\treturn dateInTimezone.getTime() - dateInUTC.getTime();\n\t}\n\n\tgetTimezone(): number\n\t{\n\t\tconst settings = Extension.getSettings('tasks.v2.lib.timezone');\n\n\t\treturn settings.timeZone || Intl.DateTimeFormat().resolvedOptions().timeZone;\n\t}\n}\n\nexport const timezone = new Timezone();\n"],"names":["Timezone","getOffset","dateTs","timeZone","getTimezone","getTimezoneOffset","Date","date","dateInTimezone","toLocaleString","dateInUTC","getTime","settings","Extension","getSettings","Intl","DateTimeFormat","resolvedOptions","timezone"],"mappings":";;;;;;;CAEA,MAAMA,QAAQ,CACd;GACCC,SAAS,CAACC,MAAc,EAAEC,QAAgB,GAAG,IAAI,CAACC,WAAW,EAAE,EAC/D;KACC,OAAO,IAAI,CAACC,iBAAiB,CAACH,MAAM,EAAEC,QAAQ,CAAC,GAAG,IAAIG,IAAI,CAACJ,MAAM,CAAC,CAACG,iBAAiB,EAAE,GAAG,EAAE,GAAG,IAAI;;GAGnGA,iBAAiB,CAACH,MAAc,EAAEC,QAAgB,GAAG,IAAI,CAACC,WAAW,EAAE,EACvE;KACC,MAAMG,IAAI,GAAG,IAAID,IAAI,CAACJ,MAAM,CAAC;KAC7B,MAAMM,cAAc,GAAG,IAAIF,IAAI,CAACC,IAAI,CAACE,cAAc,CAAC,OAAO,EAAE;OAAEN;MAAU,CAAC,CAAC;KAC3E,MAAMO,SAAS,GAAG,IAAIJ,IAAI,CAACC,IAAI,CAACE,cAAc,CAAC,OAAO,EAAE;OAAEN,QAAQ,EAAE;MAAO,CAAC,CAAC;KAE7E,OAAOK,cAAc,CAACG,OAAO,EAAE,GAAGD,SAAS,CAACC,OAAO,EAAE;;GAGtDP,WAAW,GACX;KACC,MAAMQ,QAAQ,GAAGC,mBAAS,CAACC,WAAW,CAAC,uBAAuB,CAAC;KAE/D,OAAOF,QAAQ,CAACT,QAAQ,IAAIY,IAAI,CAACC,cAAc,EAAE,CAACC,eAAe,EAAE,CAACd,QAAQ;;CAE9E;AAEA,OAAae,QAAQ,GAAG,IAAIlB,QAAQ,EAAE;;;;;;;;"}