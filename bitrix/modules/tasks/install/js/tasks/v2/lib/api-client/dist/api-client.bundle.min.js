this.BX=this.BX||{};this.BX.Tasks=this.BX.Tasks||{};this.BX.Tasks.V2=this.BX.Tasks.V2||{};(function(s,t){"use strict";class n{constructor(s="tasks.v2."){this.baseUrl=s}async get(s,n={}){const a=this.buildUrl(s);const e=await t.ajax.runAction(a,{json:{method:"GET",...n}});return this.handleResponse(e)}async post(s,n){const a=this.buildUrl(s);const e=await t.ajax.runAction(a,{json:n});return this.handleResponse(e)}async put(s,n){const a=this.buildUrl(s);const e=await t.ajax.runAction(a,{method:"PUT",headers:{"Content-Type":"application/json"},json:n});return this.handleResponse(e)}async delete(s,n={}){const a=this.buildUrl(s,n);const e=await t.ajax.runAction(a,{method:"DELETE"});return this.handleResponse(e)}buildUrl(s,t={}){let n=`${this.baseUrl}${s}`;if(Object.keys(t).length>0){n+=`?${new URLSearchParams(t).toString()}`}return n}async handleResponse(s){const{data:t,error:n}=s;if(n){throw n}return t}}const a=new n;s.ApiClient=n;s.apiClient=a})(this.BX.Tasks.V2.Lib=this.BX.Tasks.V2.Lib||{},BX);
//# sourceMappingURL=api-client.bundle.map.js