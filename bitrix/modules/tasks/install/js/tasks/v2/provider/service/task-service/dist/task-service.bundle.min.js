this.BX=this.BX||{};this.BX.Tasks=this.BX.Tasks||{};this.BX.Tasks.V2=this.BX.Tasks.V2||{};this.BX.Tasks.V2.Provider=this.BX.Tasks.V2.Provider||{};(function(e,s,a,t,i,r,l,o,d,c){"use strict";function n(e){var s,a;return{id:e.id,title:v(e.title),description:v(e.description,u(e.description)),creator:v(e.creatorId,{id:e.creatorId}),createdTs:v(e.createdTs,Math.floor(e.createdTs/1e3)),responsible:v(e.responsibleId,{id:e.responsibleId}),deadlineTs:v(e.deadlineTs,Math.floor(e.deadlineTs/1e3)),needsControl:v(e.needsControl),fileIds:v(e.fileIds),checklist:v(e.checklist),group:v(e.groupId,{id:e.groupId}),stage:v(e.stageId,{id:e.stageId}),flow:v(e.flowId,{id:e.flowId}),priority:v(e.isImportant,e.isImportant?"high":"low"),status:v(e.status),statusChangedTs:v(e.statusChangedTs,Math.floor(e.statusChangedTs/1e3)),accomplices:v(e.accomplicesIds,(s=e.accomplicesIds)==null?void 0:s.map((e=>({id:e})))),auditors:v(e.auditorsIds,(a=e.auditorsIds)==null?void 0:a.map((e=>({id:e})))),chatId:v(e.chatId),parent:undefined}}function p(e){var s,a,t,i;const r={id:e.id,title:e.title,isImportant:e.priority==="high",description:e.description,creatorId:e.creator.id,createdTs:e.createdTs*1e3,responsibleId:e.responsible.id,deadlineTs:e.deadlineTs*1e3,needsControl:e.needsControl,fileIds:e.fileIds,checklist:(s=e.checklist)!=null?s:[],containsChecklist:e.containsChecklist,groupId:(a=e.group)==null?void 0:a.id,stageId:(t=e.stage)==null?void 0:t.id,flowId:(i=e.flow)==null?void 0:i.id,status:e.status,statusChangedTs:e.statusChangedTs*1e3,accomplicesIds:e.accomplices.map((({id:e})=>e)),auditorsIds:e.auditors.map((({id:e})=>e)),chatId:e.chatId};if(e.rights){r.rights=e.rights}return r}function b(e,a){var t;const i={TITLE:v(e.title),DESCRIPTION:v(e.description,u(e.description)),RESPONSIBLE_ID:v(e.responsibleId),GROUP_ID:v(e.groupId),DEADLINE_TS:v(e.deadlineTs,Math.floor(e.deadlineTs/1e3)),IS_IMPORTANT:v(e.isImportant,e.isImportant?"Y":null),FILE_IDS:v(e.fileIds,((t=e.fileIds)==null?void 0:t.length)>0?e.fileIds:null),CHECKLIST:s.CheckListMappers.mapModelToSliderData(a)};return Object.fromEntries(Object.entries(i).filter((([,e])=>e)))}function v(e,s=e){return a.Type.isUndefined(e)?undefined:s}function u(e){return e==null?void 0:e.replaceAll("[p]\n","").replaceAll("[/p]","")}var h=babelHelpers.classPrivateFieldLooseKey("data");class P{constructor(e){Object.defineProperty(this,h,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,h)[h]=e}getTask(){return p(babelHelpers.classPrivateFieldLooseBase(this,h)[h])}getFlow(){return babelHelpers.classPrivateFieldLooseBase(this,h)[h].flow?d.FlowMappers.mapDtoToModel(babelHelpers.classPrivateFieldLooseBase(this,h)[h].flow):null}getGroup(){return babelHelpers.classPrivateFieldLooseBase(this,h)[h].group?o.GroupMappers.mapDtoToModel(babelHelpers.classPrivateFieldLooseBase(this,h)[h].group):null}getStages(){return babelHelpers.classPrivateFieldLooseBase(this,h)[h].stage?[o.GroupMappers.mapStageDtoToModel(babelHelpers.classPrivateFieldLooseBase(this,h)[h].stage)]:[]}getUsers(){return[babelHelpers.classPrivateFieldLooseBase(this,h)[h].creator,babelHelpers.classPrivateFieldLooseBase(this,h)[h].responsible,...babelHelpers.classPrivateFieldLooseBase(this,h)[h].accomplices,...babelHelpers.classPrivateFieldLooseBase(this,h)[h].auditors].map((e=>c.UserMappers.mapDtoToModel(e)))}}var F=babelHelpers.classPrivateFieldLooseKey("isRealId");var T=babelHelpers.classPrivateFieldLooseKey("updateFields");var L=babelHelpers.classPrivateFieldLooseKey("updatePromises");var f=babelHelpers.classPrivateFieldLooseKey("updateServerTaskDebounced");var B=babelHelpers.classPrivateFieldLooseKey("updateTaskFields");var H=babelHelpers.classPrivateFieldLooseKey("updateServerTask");var y=babelHelpers.classPrivateFieldLooseKey("updateScrumFields");var k=babelHelpers.classPrivateFieldLooseKey("updateStatus");var g=babelHelpers.classPrivateFieldLooseKey("updateDeadlineFields");var w=babelHelpers.classPrivateFieldLooseKey("getTaskFields");var I=babelHelpers.classPrivateFieldLooseKey("getFilteredFields");var S=babelHelpers.classPrivateFieldLooseKey("scrumFields");var m=babelHelpers.classPrivateFieldLooseKey("statusFields");var O=babelHelpers.classPrivateFieldLooseKey("deadlineFields");var C=babelHelpers.classPrivateFieldLooseKey("hasChanges");var M=babelHelpers.classPrivateFieldLooseKey("getStoreTask");var j=babelHelpers.classPrivateFieldLooseKey("insertStoreTask");var K=babelHelpers.classPrivateFieldLooseKey("updateStoreTask");var $=babelHelpers.classPrivateFieldLooseKey("extractTask");var X=babelHelpers.classPrivateFieldLooseKey("deleteStoreTask");class D{constructor(){Object.defineProperty(this,X,{value:ee});Object.defineProperty(this,$,{value:Z});Object.defineProperty(this,K,{value:W});Object.defineProperty(this,j,{value:Q});Object.defineProperty(this,M,{value:z});Object.defineProperty(this,C,{value:q});Object.defineProperty(this,O,{get:Y,set:void 0});Object.defineProperty(this,m,{get:x,set:void 0});Object.defineProperty(this,S,{get:J,set:void 0});Object.defineProperty(this,I,{value:_});Object.defineProperty(this,w,{value:A});Object.defineProperty(this,g,{value:U});Object.defineProperty(this,k,{value:G});Object.defineProperty(this,y,{value:N});Object.defineProperty(this,H,{value:R});Object.defineProperty(this,B,{value:E});Object.defineProperty(this,F,{value:V});Object.defineProperty(this,T,{writable:true,value:{}});Object.defineProperty(this,L,{writable:true,value:{}});Object.defineProperty(this,f,{writable:true,value:{}})}async getById(e){try{const s=await r.apiClient.post("Task.get",{task:{id:e}});await babelHelpers.classPrivateFieldLooseBase(this,$)[$](s)}catch(e){console.error("TaskService: getById error",e)}}async getRights(e){try{const{rights:s}=await r.apiClient.post("Task.Access.get",{task:{id:e}});await babelHelpers.classPrivateFieldLooseBase(this,K)[K](e,{rights:s})}catch(e){console.error("TaskService: getRights error",e)}}async add(e){try{const s=await r.apiClient.post("Task.add",{task:n(e)});const a=s.id;await babelHelpers.classPrivateFieldLooseBase(this,$)[$](s);return[a,null]}catch(e){var s,a;console.error("TaskService: add error",e);return[0,new Error(e==null?void 0:(s=e.errors)==null?void 0:(a=s[0])==null?void 0:a.message)]}}async update(e,s){const a=babelHelpers.classPrivateFieldLooseBase(this,M)[M](e);await babelHelpers.classPrivateFieldLooseBase(this,K)[K](e,s);if(!babelHelpers.classPrivateFieldLooseBase(this,F)[F](e)){return}try{await babelHelpers.classPrivateFieldLooseBase(this,y)[y](e,s,a);await babelHelpers.classPrivateFieldLooseBase(this,g)[g](e,s,a);await babelHelpers.classPrivateFieldLooseBase(this,B)[B](e,s,a)}catch(s){await babelHelpers.classPrivateFieldLooseBase(this,K)[K](e,a);console.error("TaskService: update error",s)}}async delete(e){const s=babelHelpers.classPrivateFieldLooseBase(this,M)[M](e);await babelHelpers.classPrivateFieldLooseBase(this,X)[X](e);if(!babelHelpers.classPrivateFieldLooseBase(this,F)[F](e)){return}try{await r.apiClient.post("Task.delete",{task:{id:e}})}catch(e){void babelHelpers.classPrivateFieldLooseBase(this,j)[j](s);console.error("TaskService: delete error",e)}}async start(e){await babelHelpers.classPrivateFieldLooseBase(this,k)[k](e,"Task.Status.start",t.TaskStatus.InProgress)}async disapprove(e){await babelHelpers.classPrivateFieldLooseBase(this,k)[k](e,"Task.Status.disapprove",t.TaskStatus.Pending)}async defer(e){await babelHelpers.classPrivateFieldLooseBase(this,k)[k](e,"Task.Status.defer",t.TaskStatus.Deferred)}async approve(e){await babelHelpers.classPrivateFieldLooseBase(this,k)[k](e,"Task.Status.approve",t.TaskStatus.Completed)}async pause(e){await babelHelpers.classPrivateFieldLooseBase(this,k)[k](e,"Task.Status.pause",t.TaskStatus.Pending)}async complete(e){const s=babelHelpers.classPrivateFieldLooseBase(this,M)[M](e).needsControl?t.TaskStatus.SupposedlyCompleted:t.TaskStatus.Completed;await babelHelpers.classPrivateFieldLooseBase(this,k)[k](e,"Task.Status.complete",s)}async renew(e){await babelHelpers.classPrivateFieldLooseBase(this,k)[k](e,"Task.Status.renew",t.TaskStatus.Pending)}get $store(){return i.Core.getStore()}}function V(e){return Number.isInteger(e)&&e>0}async function E(e,s,t){var i,r,l,o;const d=babelHelpers.classPrivateFieldLooseBase(this,w)[w](s);if(!babelHelpers.classPrivateFieldLooseBase(this,C)[C](t,d)){return}babelHelpers.classPrivateFieldLooseBase(this,T)[T][e]={...babelHelpers.classPrivateFieldLooseBase(this,T)[T][e],...d};(r=(i=babelHelpers.classPrivateFieldLooseBase(this,L)[L])[e])!=null?r:i[e]=new ae;(o=(l=babelHelpers.classPrivateFieldLooseBase(this,f)[f])[e])!=null?o:l[e]=a.Runtime.debounce(babelHelpers.classPrivateFieldLooseBase(this,H)[H],500,this);babelHelpers.classPrivateFieldLooseBase(this,f)[f][e](e);await babelHelpers.classPrivateFieldLooseBase(this,L)[L][e]}async function R(e){const s=babelHelpers.classPrivateFieldLooseBase(this,T)[T][e];delete babelHelpers.classPrivateFieldLooseBase(this,T)[T][e];const a=babelHelpers.classPrivateFieldLooseBase(this,L)[L][e];delete babelHelpers.classPrivateFieldLooseBase(this,L)[L][e];const t=await r.apiClient.post("Task.update",{task:n({id:e,...s})});await babelHelpers.classPrivateFieldLooseBase(this,$)[$](t);a.resolve()}async function N(e,s,a){const t=babelHelpers.classPrivateFieldLooseBase(this,I)[I](s,babelHelpers.classPrivateFieldLooseBase(this,S)[S]);if(!babelHelpers.classPrivateFieldLooseBase(this,C)[C](a,t)){return}await r.apiClient.post("Scrum.updateTask",{taskId:e,fields:t})}async function G(e,s,a){const t=babelHelpers.classPrivateFieldLooseBase(this,M)[M](e);await babelHelpers.classPrivateFieldLooseBase(this,K)[K](e,{status:a});if(!babelHelpers.classPrivateFieldLooseBase(this,F)[F](e)){return}try{const a=await r.apiClient.post(s,{task:{id:e}});await babelHelpers.classPrivateFieldLooseBase(this,$)[$](a)}catch(a){await babelHelpers.classPrivateFieldLooseBase(this,K)[K](e,t);console.error(`TaskService: ${s} error`,a)}}async function U(e,s,a){const t=babelHelpers.classPrivateFieldLooseBase(this,I)[I](s,babelHelpers.classPrivateFieldLooseBase(this,O)[O]);if(!babelHelpers.classPrivateFieldLooseBase(this,C)[C](a,t)){return}await r.apiClient.post("Task.Deadline.update",{task:n({id:e,...t})})}function A(e){return Object.fromEntries(Object.entries(e).filter((([e])=>{const s=babelHelpers.classPrivateFieldLooseBase(this,S)[S].has(e);const a=babelHelpers.classPrivateFieldLooseBase(this,m)[m].has(e);const t=babelHelpers.classPrivateFieldLooseBase(this,O)[O].has(e);return!s&&!a&&!t})))}function _(e,s){return Object.fromEntries(Object.entries(e).filter((([e])=>s.has(e))))}function J(){return new Set(["storyPoints","epicId"])}function x(){return new Set(["status"])}function Y(){return new Set(["deadlineTs"])}function q(e,s){return Object.entries(s).some((([s,a])=>JSON.stringify(e[s])!==JSON.stringify(a)))}function z(e){return{...this.$store.getters[`${t.Model.Tasks}/getById`](e)}}async function Q(e){await this.$store.dispatch(`${t.Model.Tasks}/insert`,e)}async function W(e,s){await this.$store.dispatch(`${t.Model.Tasks}/update`,{id:e,fields:s})}async function Z(e){const s=new P(e);await Promise.all([this.$store.dispatch(`${t.Model.Tasks}/upsert`,s.getTask()),this.$store.dispatch(`${t.Model.Flows}/upsert`,s.getFlow()),this.$store.dispatch(`${t.Model.Groups}/insert`,s.getGroup()),this.$store.dispatch(`${t.Model.Stages}/upsertMany`,s.getStages()),this.$store.dispatch(`${t.Model.Users}/upsertMany`,s.getUsers())]);await l.fileService.get(e.id).sync(e.fileIds)}async function ee(e){await this.$store.dispatch(`${t.Model.Tasks}/delete`,e)}const se=new D;function ae(){const e=new Promise((e=>{this.resolve=e}));e.resolve=this.resolve;return e}const te={mapModelToDto:n,mapDtoToModel:p,mapModelToSliderData:b};e.TaskMappers=te;e.taskService=se})(this.BX.Tasks.V2.Provider.Service=this.BX.Tasks.V2.Provider.Service||{},BX.Tasks.V2.Provider.Service,BX,BX.Tasks.V2.Const,BX.Tasks.V2,BX.Tasks.V2.Lib,BX.Tasks.V2.Provider.Service,BX.Tasks.V2.Provider.Service,BX.Tasks.V2.Provider.Service,BX.Tasks.V2.Provider.Service);
//# sourceMappingURL=task-service.bundle.map.js