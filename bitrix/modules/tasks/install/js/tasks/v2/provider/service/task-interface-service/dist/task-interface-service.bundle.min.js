this.BX=this.BX||{};this.BX.Tasks=this.BX.Tasks||{};this.BX.Tasks.V2=this.BX.Tasks.V2||{};this.BX.Tasks.V2.Provider=this.BX.Tasks.V2.Provider||{};(function(s,e){"use strict";var t=babelHelpers.classPrivateFieldLooseKey("fetchPromise");class i{constructor(){Object.defineProperty(this,t,{writable:true,value:void 0})}async fetchData(){var s,i;(i=(s=babelHelpers.classPrivateFieldLooseBase(this,t))[t])!=null?i:s[t]=new Promise((async(s,t)=>{try{const t=await(new e.ApiClient).post("TaskInterface.get",{});s(t)}catch(s){t(s)}}));return babelHelpers.classPrivateFieldLooseBase(this,t)[t]}}const a=new i;s.taskInterfaceService=a})(this.BX.Tasks.V2.Provider.Service=this.BX.Tasks.V2.Provider.Service||{},BX.Tasks.V2.Lib);
//# sourceMappingURL=task-interface-service.bundle.map.js