this.BX=this.BX||{};this.BX.Tasks=this.BX.Tasks||{};this.BX.Tasks.V2=this.BX.Tasks.V2||{};this.BX.Tasks.V2.Provider=this.BX.Tasks.V2.Provider||{};(function(s,e,t,o){"use strict";function i(s){return{id:s.id,name:s.name,efficiency:s.efficiency}}class r{getUrl(s,e){return`/company/personal/user/${e}/tasks/flow/?ID_numsel=exact&ID_from=${s}&ID_to=${s}&apply_filter=Y`}async getFlow(s){try{const r=await o.apiClient.post("Flow.get",{flow:{id:s}});console.log(r);const a=i(r);await t.Core.getStore().dispatch(`${e.Model.Flows}/insert`,a)}catch(s){console.error("FlowService: getFlow error",s)}}}const a=new r;const c={mapDtoToModel:i};s.FlowMappers=c;s.flowService=a})(this.BX.Tasks.V2.Provider.Service=this.BX.Tasks.V2.Provider.Service||{},BX.Tasks.V2.Const,BX.Tasks.V2,BX.Tasks.V2.Lib);
//# sourceMappingURL=flow-service.bundle.map.js