this.BX=this.BX||{};this.BX.Tasks=this.BX.Tasks||{};this.BX.Tasks.V2=this.BX.Tasks.V2||{};this.BX.Tasks.V2.Component=this.BX.Tasks.V2.Component||{};(function(e,t,s,i,l,o,a,n,r,d,c,h,u,p,v,f,b,k){"use strict";const g=Object.freeze({id:"flowId",title:n.Loc.getMessage("TASKS_V2_FLOW_TITLE")});var w=babelHelpers.classPrivateFieldLooseKey("taskId");var I=babelHelpers.classPrivateFieldLooseKey("dialog");var F=babelHelpers.classPrivateFieldLooseKey("onUpdateOnce");var B=babelHelpers.classPrivateFieldLooseKey("createDialog");var m=babelHelpers.classPrivateFieldLooseKey("onItemChange");var S=babelHelpers.classPrivateFieldLooseKey("items");var T=babelHelpers.classPrivateFieldLooseKey("task");var P=babelHelpers.classPrivateFieldLooseKey("insertFlow");var L=babelHelpers.classPrivateFieldLooseKey("updateFlow");var O=babelHelpers.classPrivateFieldLooseKey("clearOnUpdateOnce");class y{constructor(){Object.defineProperty(this,L,{value:E});Object.defineProperty(this,P,{value:A});Object.defineProperty(this,T,{get:M,set:void 0});Object.defineProperty(this,S,{get:X,set:void 0});Object.defineProperty(this,m,{value:H});Object.defineProperty(this,B,{value:C});Object.defineProperty(this,w,{writable:true,value:void 0});Object.defineProperty(this,I,{writable:true,value:void 0});Object.defineProperty(this,F,{writable:true,value:null});Object.defineProperty(this,O,{writable:true,value:()=>{babelHelpers.classPrivateFieldLooseBase(this,F)[F]=null}})}setTaskId(e){babelHelpers.classPrivateFieldLooseBase(this,w)[w]=e;return this}showTo(e){var t,s;(s=(t=babelHelpers.classPrivateFieldLooseBase(this,I))[I])!=null?s:t[I]=babelHelpers.classPrivateFieldLooseBase(this,B)[B]();babelHelpers.classPrivateFieldLooseBase(this,I)[I].selectItemsByIds(babelHelpers.classPrivateFieldLooseBase(this,S)[S]);babelHelpers.classPrivateFieldLooseBase(this,I)[I].showTo(e)}onUpdateOnce(e){babelHelpers.classPrivateFieldLooseBase(this,F)[F]=e}isOpen(){var e,t;return(e=(t=babelHelpers.classPrivateFieldLooseBase(this,I)[I])==null?void 0:t.isOpen())!=null?e:false}}function C(){const e=n.Runtime.debounce(babelHelpers.classPrivateFieldLooseBase(this,m)[m],10,this);const t=new r.EntitySelectorDialog({context:"tasks-card",width:380,height:370,multiple:false,hideOnDeselect:true,enableSearch:true,entities:[{id:v.EntitySelectorEntity.Flow,options:{onlyActive:true}}],preselectedItems:babelHelpers.classPrivateFieldLooseBase(this,S)[S],events:{"Item:onSelect":e,"Item:onDeselect":e,onHide:babelHelpers.classPrivateFieldLooseBase(this,O)[O],onDestroy:babelHelpers.classPrivateFieldLooseBase(this,O)[O]},recentTabOptions:{stub:h.EmptyStub,stubOptions:{showArrow:false}}});const s=n.Extension.getSettings("tasks.v2.component.fields.flow").get("isFeatureTriable");const i=new h.Footer(t,{isFeatureTriable:s});t.setFooter(i.render());return t}async function H(){var e;const t=babelHelpers.classPrivateFieldLooseBase(this,I)[I].getSelectedItems()[0];const s=t==null?void 0:t.getCustomData().get("groupId");if(t){babelHelpers.classPrivateFieldLooseBase(this,P)[P]({id:t.getId(),name:t.getTitle()});const e=d.Core.getStore().getters[`${v.Model.Groups}/getById`](s);if(!e){await c.groupService.getGroup(s)}}babelHelpers.classPrivateFieldLooseBase(this,L)[L]((e=t==null?void 0:t.getId())!=null?e:0,s!=null?s:0)}function X(){return[[v.EntitySelectorEntity.Flow,babelHelpers.classPrivateFieldLooseBase(this,T)[T].flowId]]}function M(){return d.Core.getStore().getters[`${v.Model.Tasks}/getById`](babelHelpers.classPrivateFieldLooseBase(this,w)[w])}function A(e){void d.Core.getStore().dispatch(`${v.Model.Flows}/insert`,e)}function E(e,t){var s,i;const l=d.Core.getStore().getters[`${v.Model.Interface}/currentUserId`];void k.taskService.update(babelHelpers.classPrivateFieldLooseBase(this,w)[w],{creatorId:l,flowId:e,groupId:t,stageId:0});(s=(i=babelHelpers.classPrivateFieldLooseBase(this,F))[F])==null?void 0:s.call(i);babelHelpers.classPrivateFieldLooseBase(this,O)[O]()}const V=new y;const $={name:"TaskFlow",components:{BIcon:l.BIcon,BMenu:i.BMenu,Stage:o.Stage},props:{taskId:{type:[Number,String],required:true}},setup(){return{flowMeta:g,Outline:u.Outline}},data(){return{isMenuShown:false}},computed:{...s.mapGetters({currentUserId:`${v.Model.Interface}/currentUserId`}),task(){return this.$store.getters[`${v.Model.Tasks}/getById`](this.taskId)},flow(){return this.$store.getters[`${v.Model.Flows}/getById`](this.task.flowId)},isEdit(){return Number.isInteger(this.taskId)&&this.taskId>0},menuOptions(){return{id:"tasks-field-flow-menu",bindElement:this.$refs.container,offsetTop:8,items:[{title:this.loc("TASKS_V2_FLOW_ABOUT"),icon:u.Outline.BOTTLENECK,onClick:this.openFlow},{title:this.loc("TASKS_V2_FLOW_CHANGE"),icon:u.Outline.EDIT_L,onClick:this.showDialog},{design:i.MenuItemDesign.Alert,title:this.loc("TASKS_V2_FLOW_DETACH"),icon:u.Outline.CROSS_L,onClick:this.clearField}],targetContainer:document.body}},readonly(){return!this.task.rights.edit}},methods:{handleClick(){if(this.flow&&this.readonly){this.openFlow();return}if(this.isEdit&&this.flow){this.showMenu()}else{this.showDialog()}},showMenu(){this.isMenuShown=true},handleCrossClick(e){e.stopPropagation();this.clearField()},openFlow(){const e=a.flowService.getUrl(this.flow.id,this.currentUserId);t.SidePanel.Instance.open(e)},clearField(){void k.taskService.update(this.taskId,{flowId:0,groupId:0,stageId:0})},showDialog(){V.setTaskId(this.taskId).showTo(this.$refs.container)}},template:`\n\t\t<div\n\t\t\tclass="tasks-field-flow"\n\t\t\t:data-task-id="taskId"\n\t\t\t:data-task-field-id="flowMeta.id"\n\t\t\t:data-task-field-value="task.flowId"\n\t\t>\n\t\t\t<div class="tasks-field-flow-flow" ref="container" @click="handleClick">\n\t\t\t\t<BIcon class="tasks-field-flow-image" :name="Outline.BOTTLENECK" color="var(--ui-color-accent-main-primary)"/>\n\t\t\t\t<template v-if="flow">\n\t\t\t\t\t<div class="tasks-field-flow-title">\n\t\t\t\t\t\t{{ flow.name }}\n\t\t\t\t\t</div>\n\t\t\t\t\t<BIcon\n\t\t\t\t\t\tv-if="!isEdit"\n\t\t\t\t\t\tclass="tasks-field-flow-cross"\n\t\t\t\t\t\t:name="Outline.CROSS_L"\n\t\t\t\t\t\t@click.capture="handleCrossClick"\n\t\t\t\t\t/>\n\t\t\t\t</template>\n\t\t\t\t<template v-else>\n\t\t\t\t\t<div class="tasks-field-flow-add-text">{{ loc('TASKS_V2_FLOW_ADD') }}</div>\n\t\t\t\t</template>\n\t\t\t</div>\n\t\t\t<Stage v-if="isEdit && flow" :taskId="taskId"/>\n\t\t</div>\n\t\t<BMenu v-if="isMenuShown" :options="menuOptions" @close="isMenuShown = false"/>\n\t`};const D={components:{Chip:f.Chip},props:{taskId:{type:[Number,String],required:true},isAutonomous:{type:Boolean,default:false}},setup(){return{Outline:u.Outline,flowMeta:g}},computed:{task(){return this.$store.getters[`${v.Model.Tasks}/getById`](this.taskId)},flow(){return this.$store.getters[`${v.Model.Flows}/getById`](this.task.flowId)},design(){return{[!this.isAutonomous&&!this.isSelected]:f.ChipDesign.Shadow,[!this.isAutonomous&&this.isSelected]:f.ChipDesign.ShadowAccent,[this.isAutonomous&&!this.isSelected]:f.ChipDesign.Outline,[this.isAutonomous&&this.isSelected]:f.ChipDesign.OutlineAccent}.true},isSelected(){if(this.isAutonomous){return this.task.flowId>0}return this.$store.getters[`${v.Model.Tasks}/wasFieldFilled`](this.taskId,g.id)},isFilled(){return this.isAutonomous&&this.task.flowId>0},text(){if(this.isFilled){return this.flow.name}return g.title},readonly(){return!this.task.rights.edit}},methods:{handleClick(){if(!this.isAutonomous&&this.isSelected){this.highlightField();return}V.setTaskId(this.taskId).showTo(this.$refs.chip.$el);if(!this.isAutonomous){V.onUpdateOnce(this.highlightField)}},highlightField(){void b.fieldHighlighter.setContainer(this.$root.$el).highlight(g.id)},handleClear(){void k.taskService.update(this.taskId,{flowId:0,groupId:0})}},template:`\n\t\t<Chip\n\t\t\tv-if="isSelected || !readonly"\n\t\t\t:design="design"\n\t\t\t:icon="Outline.BOTTLENECK"\n\t\t\t:text="text"\n\t\t\t:withClear="isFilled"\n\t\t\t:trimmable="isFilled"\n\t\t\t:data-task-id="taskId"\n\t\t\t:data-task-chip-id="flowMeta.id"\n\t\t\t:data-task-chip-value="task.flowId"\n\t\t\tref="chip"\n\t\t\t@click="handleClick"\n\t\t\t@clear="handleClear"\n\t\t\t:title="flow?.name ?? ''"\n\t\t/>\n\t`};e.Flow=$;e.FlowChip=D;e.flowMeta=g})(this.BX.Tasks.V2.Component.Fields=this.BX.Tasks.V2.Component.Fields||{},BX.SidePanel,BX.Vue3.Vuex,BX.UI.Vue3.Components,BX.UI.IconSet,BX.Tasks.V2.Component.Fields,BX.Tasks.V2.Provider.Service,BX,BX.Tasks.V2.Lib,BX.Tasks.V2,BX.Tasks.V2.Provider.Service,BX.Tasks.Flow,BX.UI.IconSet,BX,BX.Tasks.V2.Const,BX.Tasks.V2.Component.Elements,BX.Tasks.V2.Lib,BX.Tasks.V2.Provider.Service);
//# sourceMappingURL=flow.bundle.map.js