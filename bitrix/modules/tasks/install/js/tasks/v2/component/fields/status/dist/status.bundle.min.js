this.BX=this.BX||{};this.BX.Tasks=this.BX.Tasks||{};this.BX.Tasks.V2=this.BX.Tasks.V2||{};this.BX.Tasks.V2.Component=this.BX.Tasks.V2.Component||{};(function(t,s,e,a,o,n,i,u){"use strict";const r={props:{taskId:{type:[Number,String],required:true}},setup(){return{dateFormat:n.DateTimeFormat.getFormat("SHORT_DATE_FORMAT"),timeFormat:n.DateTimeFormat.getFormat("SHORT_TIME_FORMAT")}},computed:{task(){return this.$store.getters[`${i.Model.Tasks}/getById`](this.taskId)},statusFormatted(){const t={[i.TaskStatus.Pending]:"TASKS_V2_STATUS_PENDING_FROM",[i.TaskStatus.InProgress]:"TASKS_V2_STATUS_IN_PROGRESS_FROM",[i.TaskStatus.SupposedlyCompleted]:"TASKS_V2_STATUS_SUPPOSEDLY_COMPLETED_FROM",[i.TaskStatus.Completed]:"TASKS_V2_STATUS_COMPLETED_AT",[i.TaskStatus.Deferred]:"TASKS_V2_STATUS_DEFERRED_AT"};return this.loc(t[this.task.status],{"#DATE#":n.DateTimeFormat.format(this.dateFormat,this.task.statusChangedTs/1e3),"#TIME#":n.DateTimeFormat.format(this.timeFormat,this.task.statusChangedTs/1e3)})},createdAtFormatted(){return this.loc("TASKS_V2_STATUS_CREATED_AT",{"#DATE#":n.DateTimeFormat.format(this.dateFormat,this.task.createdTs/1e3),"#TIME#":n.DateTimeFormat.format(this.timeFormat,this.task.createdTs/1e3)})}},template:`\n\t\t<div class="tasks-field-status-popup">\n\t\t\t<div>{{ statusFormatted }}</div>\n\t\t\t<div>{{ createdAtFormatted }}</div>\n\t\t</div>\n\t`};const T={components:{Popup:o.Popup,StatusPopupContent:r},props:{taskId:{type:[Number,String],required:true},bindElement:{type:HTMLElement,required:true}},computed:{popupId(){return"tasks-field-status-popup"},popupOptions(){return{bindElement:this.bindElement,minWidth:200,offsetTop:10,offsetLeft:this.bindElement.offsetWidth/2,background:"var(--ui-color-bg-content-inapp)",padding:13,angle:true,targetContainer:document.body}}},template:`\n\t\t<Popup\n\t\t\t:id="popupId"\n\t\t\t:options="popupOptions"\n\t\t>\n\t\t\t<StatusPopupContent :taskId="taskId"/>\n\t\t</Popup>\n\t`};const d=Object.freeze({id:"status",title:u.Loc.getMessage("TASKS_V2_STATUS_TITLE")});const p={components:{BIcon:s.BIcon,StatusPopup:T},props:{taskId:{type:[Number,String],required:true}},setup(){return{statusMeta:d}},data(){return{nowTs:Date.now(),isPopupShown:false}},computed:{task(){return this.$store.getters[`${i.Model.Tasks}/getById`](this.taskId)},isExpired(){return this.task.deadlineTs&&this.nowTs>this.task.deadlineTs},icon(){var t;const s={[i.TaskStatus.Pending]:e.Outline.HOURGLASS,[i.TaskStatus.InProgress]:e.Outline.NEXT,[i.TaskStatus.SupposedlyCompleted]:e.Outline.REFRESH,[i.TaskStatus.Completed]:e.Outline.SENDED,[i.TaskStatus.Deferred]:e.Outline.PAUSE_L};return(t=s[this.task.status])!=null?t:e.Outline.HOURGLASS},statusFormatted(){var t;const s={[i.TaskStatus.Pending]:this.loc("TASKS_V2_STATUS_PENDING"),[i.TaskStatus.InProgress]:this.loc("TASKS_V2_STATUS_IN_PROGRESS"),[i.TaskStatus.SupposedlyCompleted]:this.loc("TASKS_V2_STATUS_SUPPOSEDLY_COMPLETED"),[i.TaskStatus.Completed]:this.loc("TASKS_V2_STATUS_COMPLETED"),[i.TaskStatus.Deferred]:this.loc("TASKS_V2_STATUS_DEFERRED")};return(t=s[this.task.status])!=null?t:this.loc("TASKS_V2_STATUS_PENDING")}},mounted(){this.nowTsInterval=setInterval((()=>{this.nowTs=Date.now()}),1e3)},beforeUnmount(){clearInterval(this.nowTsInterval)},methods:{handleClick(){this.clearTimeouts();if(this.isPopupShown){this.closePopup()}else{this.showPopup()}},handleMouseEnter(){this.clearTimeouts();this.showTimeout=setTimeout((()=>this.showPopup()),100)},handleMouseLeave(){this.clearTimeouts();this.closePopup()},showPopup(){this.clearTimeouts();this.isPopupShown=true},closePopup(){this.clearTimeouts();this.isPopupShown=false},clearTimeouts(){clearTimeout(this.showTimeout)}},template:`\n\t\t<div\n\t\t\tclass="tasks-field-status"\n\t\t\t:data-task-id="taskId"\n\t\t\t:data-task-field-id="statusMeta.id"\n\t\t\t:data-task-field-value="task.status"\n\t\t\t:data-task-created-ts="task.createdTs"\n\t\t\t:data-task-status-changes-ts="task.statusChangedTs"\n\t\t\tref="container"\n\t\t\t@click="handleClick"\n\t\t\t@mouseenter="handleMouseEnter"\n\t\t\t@mouseleave="handleMouseLeave"\n\t\t>\n\t\t\t<BIcon class="tasks-field-status-icon" :name="icon"/>\n\t\t\t<div class="tasks-field-status-text">{{ statusFormatted }}</div>\n\t\t</div>\n\t\t<StatusPopup\n\t\t\tv-if="isPopupShown"\n\t\t\t:taskId="taskId"\n\t\t\t:bindElement="$refs.container"\n\t\t\t@close="closePopup"\n\t\t/>\n\t`};t.Status=p;t.statusMeta=d})(this.BX.Tasks.V2.Component.Fields=this.BX.Tasks.V2.Component.Fields||{},BX.UI.IconSet,BX.UI.IconSet,BX,BX.UI.Vue3.Components,BX.Main,BX.Tasks.V2.Const,BX);
//# sourceMappingURL=status.bundle.map.js