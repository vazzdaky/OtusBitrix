jn.define("disk/statemanager/redux/slices/files",((e,s,r)=>{const{isOffline:d}=e("device/connection");const{createSlice:t}=e("statemanager/redux/toolkit");const{ReducerRegistry:i}=e("statemanager/redux/reducer-registry");const{sliceName:a,fileListAdapter:n}=e("disk/statemanager/redux/slices/files/meta");const{rename:l,remove:o,move:c,copy:m}=e("disk/statemanager/redux/slices/files/thunk");const{renamePending:u,renameFulfilled:f,removePending:p,removeFulfilled:g,movePending:v,moveFulfilled:k,copyPending:x,copyFulfilled:y}=e("disk/statemanager/redux/slices/files/extra-reducer");const{FileModel:R}=e("disk/statemanager/redux/slices/files/model/file");const F=e=>e.map((e=>R.prepareReduxFileFromServerFile(e)));const A=t({name:a,initialState:n.getInitialState(),reducers:{filesUpsertedFromServer:{reducer:n.upsertMany,prepare:e=>({payload:F(e)})},filesAddedFromServer:{reducer:n.addMany,prepare:e=>({payload:F(e)})},filesUpserted:{reducer:n.upsertMany},filesAdded:{reducer:n.upsertMany},markAsRemoved:(e,{payload:s})=>{if(d()){return}const{objectId:r}=s;const t=e.entities[r];n.upsertOne(e,{...t,isRemoved:true})},unmarkAsRemoved:(e,{payload:s})=>{if(d()){return}const{objectId:r}=s;const t=e.entities[r];n.upsertOne(e,{...t,isRemoved:false})},setRights:(e,{payload:s})=>{const{objectId:r,rights:d}=s;const t=e.entities[r];n.upsertOne(e,{...t,rights:d})},setExternalLink:(e,{payload:s})=>{const{objectId:r,external:d}=s;const t=e.entities[r];n.upsertOne(e,{...t,links:{...t.links,external:d}})}},extraReducers:e=>{e.addCase(l.pending,u).addCase(l.fulfilled,f).addCase(o.pending,p).addCase(o.fulfilled,g).addCase(c.pending,v).addCase(c.fulfilled,k).addCase(m.pending,x).addCase(m.fulfilled,y)}});const{reducer:S,actions:C}=A;const{filesUpsertedFromServer:h,filesUpserted:U,filesAddedFromServer:j,filesAdded:I,markAsRemoved:M,unmarkAsRemoved:O,setRights:b,setExternalLink:L}=C;i.register(a,S);r.exports={filesUpsertedFromServer:h,filesUpserted:U,filesAddedFromServer:j,filesAdded:I,markAsRemoved:M,unmarkAsRemoved:O,setRights:b,setExternalLink:L}}));
//# sourceMappingURL=extension.map.js