{"version":3,"file":"checker.bundle.js","sources":["../../org-chart/src/api.js","../src/checker.js"],"sourcesContent":["import { getData, postData } from 'humanresources.company-structure.api';\nimport { getNodeColorSettings } from 'humanresources.company-structure.utils';\nimport type { TreeItem } from './types';\n\nconst createTreeDataStore = (treeData: Array<TreeItem>): Map<number, TreeItem> => {\n\tconst dataMap = new Map();\n\ttreeData.forEach((item) => {\n\t\tconst { id, parentId, colorName, entityType } = item;\n\t\tconst mapItem = dataMap.get(id) ?? {};\n\t\tconst teamColor = getNodeColorSettings(colorName, entityType);\n\t\tdataMap.set(id, { ...mapItem, ...item, teamColor });\n\t\tif (parentId === 0)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst mapParentItem = dataMap.get(parentId) ?? {};\n\t\tconst children = mapParentItem.children ?? [];\n\t\tdataMap.set(parentId, {\n\t\t\t...mapParentItem,\n\t\t\tchildren: [...children, id],\n\t\t});\n\t});\n\n\treturn dataMap;\n};\n\nexport const chartAPI = {\n\tremoveDepartment: (id: Number): Promise<void> => {\n\t\treturn getData('humanresources.api.Structure.Node.delete', { nodeId: id });\n\t},\n\tgetDepartmentsData: (): Promise<Array<TreeItem>> => {\n\t\treturn getData('humanresources.api.Structure.get', {}, { tool: 'structure', category: 'structure', event: 'open_structure' });\n\t},\n\tgetCurrentDepartments: (): Promise<number[]> => {\n\t\treturn getData('humanresources.api.Structure.Node.current');\n\t},\n\tgetDictionary: (): Promise<string> => {\n\t\treturn getData('humanresources.api.Structure.dictionary');\n\t},\n\tgetUserId: (): Promise<number> => {\n\t\treturn getData('humanresources.api.User.getCurrentId');\n\t},\n\tfirstTimeOpened: (): Promise<void> => {\n\t\treturn postData('humanresources.api.User.firstTimeOpen');\n\t},\n\tcreateTreeDataStore,\n};\n","/* eslint-disable no-constructor-return */\nimport { chartAPI } from '../../org-chart/src/api';\nimport { useChartStore } from 'humanresources.company-structure.chart-store';\nimport { EntityTypes } from 'humanresources.company-structure.utils';\n\nexport const PermissionActions = Object.freeze({\n\tstructureView: 'ACTION_STRUCTURE_VIEW',\n\tdepartmentCreate: 'ACTION_DEPARTMENT_CREATE',\n\tdepartmentDelete: 'ACTION_DEPARTMENT_DELETE',\n\tdepartmentEdit: 'ACTION_DEPARTMENT_EDIT',\n\temployeeAddToDepartment: 'ACTION_EMPLOYEE_ADD_TO_DEPARTMENT',\n\temployeeRemoveFromDepartment: 'ACTION_EMPLOYEE_REMOVE_FROM_DEPARTMENT',\n\temployeeFire: 'ACTION_FIRE_EMPLOYEE',\n\taccessEdit: 'ACTION_USERS_ACCESS_EDIT',\n\tteamAccessEdit: 'ACTION_TEAM_ACCESS_EDIT',\n\tinviteToDepartment: 'ACTION_USER_INVITE',\n\tteamView: 'ACTION_TEAM_VIEW',\n\tteamCreate: 'ACTION_TEAM_CREATE',\n\tteamEdit: 'ACTION_TEAM_EDIT',\n\tteamDelete: 'ACTION_TEAM_DELETE',\n\tteamAddMember: 'ACTION_TEAM_MEMBER_ADD',\n\tteamRemoveMember: 'ACTION_TEAM_MEMBER_REMOVE',\n\tteamSettingsEdit: 'ACTION_TEAM_SETTINGS_EDIT',\n});\n\nexport const PermissionLevels = Object.freeze({\n\tfullCompany: 30,\n\tselfAndSub: 20,\n\tself: 10,\n\tnone: 0,\n});\n\nexport class PermissionCheckerClass\n{\n\tconstructor(): PermissionCheckerClass\n\t{\n\t\tif (!PermissionCheckerClass.instance)\n\t\t{\n\t\t\tthis.currentUserPermissions = {};\n\t\t\tthis.permissionVariablesDictionary = [];\n\t\t\tthis.isTeamsAvailable = false;\n\t\t\tthis.isInitialized = false;\n\t\t\tPermissionCheckerClass.instance = this;\n\t\t}\n\n\t\treturn PermissionCheckerClass.instance;\n\t}\n\n\tgetInstance(): PermissionCheckerClass\n\t{\n\t\treturn PermissionCheckerClass.instance;\n\t}\n\n\tasync init(): Promise<void>\n\t{\n\t\tif (this.isInitialized)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst {\n\t\t\tcurrentUserPermissions,\n\t\t\tpermissionVariablesDictionary,\n\t\t\tteamsAvailable,\n\t\t} = await chartAPI.getDictionary();\n\n\t\tthis.currentUserPermissions = currentUserPermissions;\n\t\tthis.permissionVariablesDictionary = permissionVariablesDictionary;\n\t\tthis.isTeamsAvailable = teamsAvailable;\n\n\t\tthis.isInitialized = true;\n\t}\n\n\thasPermission(action: string, departmentId: number, minLevel: number = PermissionLevels.none): boolean\n\t{\n\t\tconst permissionLevel = this.currentUserPermissions[action];\n\n\t\tif (!permissionLevel || departmentId === 0)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tif (this.#isTeamAction(action))\n\t\t{\n\t\t\tif (!this.isTeamsAvailable)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn this.#hasPermissionOfTeamAction(permissionLevel, departmentId, action);\n\t\t}\n\n\t\treturn this.#hasPermissionOfDepartmentAction(permissionLevel, departmentId, action, minLevel);\n\t}\n\n\thasPermissionWithAnyNode(action: string): boolean\n\t{\n\t\tconst permissionLevel = this.currentUserPermissions[action];\n\n\t\tif (!permissionLevel)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tif (this.#isTeamAction(action))\n\t\t{\n\t\t\tif (!this.isTeamsAvailable)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn permissionLevel.TEAM > PermissionLevels.none || permissionLevel.DEPARTMENT > PermissionLevels.none;\n\t\t}\n\n\t\treturn permissionLevel > PermissionLevels.none;\n\t}\n\n\thasPermissionOfAction(action: string): boolean\n\t{\n\t\tif (this.#isTeamAction(action))\n\t\t{\n\t\t\treturn this.hasPermissionWithAnyNode(action);\n\t\t}\n\n\t\treturn this.currentUserPermissions[action] !== undefined\n\t\t\t&& this.currentUserPermissions[action] !== null\n\t\t\t&& this.currentUserPermissions[action] !== PermissionLevels.none\n\t\t;\n\t}\n\n\t#isTeamAction(action: string): boolean\n\t{\n\t\tconst teamActions = [\n\t\t\tPermissionActions.teamView,\n\t\t\tPermissionActions.teamCreate,\n\t\t\tPermissionActions.teamEdit,\n\t\t\tPermissionActions.teamDelete,\n\t\t\tPermissionActions.teamAddMember,\n\t\t\tPermissionActions.teamRemoveMember,\n\t\t\tPermissionActions.teamSettingsEdit,\n\t\t];\n\n\t\treturn teamActions.includes(action);\n\t}\n\n\t/**\n\t *\n\t * @param {{ TEAM: number, DEPARTMENT: number }} permissionValue\n\t * @param nodeId\n\t * @param action\n\t * @returns {boolean}\n\t */\n\t#hasPermissionOfTeamAction(permissionValue: Object, nodeId: number, action: string): boolean\n\t{\n\t\tif (permissionValue.TEAM === PermissionLevels.fullCompany)\n\t\t{\n\t\t\tconst departments = useChartStore().departments;\n\t\t\tconst currentNode = departments.get(nodeId);\n\t\t\tif (\n\t\t\t\taction === PermissionActions.teamCreate\n\t\t\t\t&& currentNode.entityType === EntityTypes.department\n\t\t\t)\n\t\t\t{\n\t\t\t\treturn this.hasPermission(PermissionActions.structureView, currentNode.id);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\tif (this.#hasPermissionOfTeamActionByTeamPermission(nodeId, permissionValue.TEAM))\n\t\t{\n\t\t\treturn true;\n\t\t}\n\n\t\treturn this.#hasPermissionOfTeamActionByDepartmentPermission(nodeId, permissionValue.DEPARTMENT, action);\n\t}\n\n\t/**\n\t *\n\t * @param permissionLevel\n\t * @param departmentId\n\t * @param action\n\t * @param minLevel\n\t * @returns {boolean}\n\t */\n\t#hasPermissionOfDepartmentAction(permissionLevel: Object, departmentId: number, action: string, minLevel: number): boolean\n\t{\n\t\tconst permissionObject = this.permissionVariablesDictionary.find((item) => item.id === permissionLevel);\n\n\t\tif (!permissionObject)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tconst departments = useChartStore().departments;\n\t\tif (action === PermissionActions.departmentDelete)\n\t\t{\n\t\t\tconst rootId = [...departments.values()].find((department) => department.parentId === 0).id;\n\t\t\tif (departmentId === rootId)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tconst userEntities = useChartStore().currentDepartments;\n\t\tconst userDepartments = new Set(\n\t\t\tuserEntities.filter((id) => {\n\t\t\t\tconst department = departments.get(id);\n\n\t\t\t\treturn department && department.entityType === EntityTypes.department;\n\t\t\t}),\n\t\t);\n\n\t\tif (permissionObject.id < minLevel)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tswitch (permissionObject.id)\n\t\t{\n\t\t\tcase PermissionLevels.fullCompany:\n\t\t\t\treturn true;\n\n\t\t\tcase PermissionLevels.selfAndSub:\n\t\t\t{\n\t\t\t\tif (userDepartments.has(departmentId))\n\t\t\t\t{\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tlet currentDepartment = departments.get(departmentId);\n\t\t\t\twhile (currentDepartment)\n\t\t\t\t{\n\t\t\t\t\tif (userDepartments.has(currentDepartment.id))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepartment = departments.get(currentDepartment.parentId);\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tcase PermissionLevels.self:\n\t\t\t\treturn userDepartments.has(departmentId);\n\n\t\t\tcase PermissionLevels.none:\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t}\n\t}\n\n\t#hasPermissionOfTeamActionByTeamPermission(nodeId: number, level: number = PermissionLevels.none): boolean\n\t{\n\t\tif (level === PermissionLevels.none)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tconst nodes = useChartStore().departments;\n\t\tconst userEntities = useChartStore().currentDepartments;\n\t\tconst userTeams = new Set(\n\t\t\tuserEntities.filter((id) => {\n\t\t\t\tconst department = nodes.get(id);\n\n\t\t\t\treturn department && department.entityType === EntityTypes.team;\n\t\t\t}),\n\t\t);\n\n\t\tif (userTeams.has(nodeId))\n\t\t{\n\t\t\treturn true;\n\t\t}\n\n\t\tif (level === PermissionLevels.self)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tlet currentDepartment = nodes.get(nodeId);\n\t\twhile (currentDepartment)\n\t\t{\n\t\t\tif (currentDepartment.entityType === EntityTypes.department)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (userTeams.has(currentDepartment.id))\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tcurrentDepartment = nodes.get(currentDepartment.parentId);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t#hasPermissionOfTeamActionByDepartmentPermission(nodeId: number, level: number = PermissionLevels.none, action: string = ''): boolean\n\t{\n\t\tif (level === PermissionLevels.none)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tconst nodes = useChartStore().departments;\n\t\tconst userEntities = useChartStore().currentDepartments;\n\t\tconst userDepartments = new Set(\n\t\t\tuserEntities.filter((id) => {\n\t\t\t\tconst department = nodes.get(id);\n\n\t\t\t\treturn department && department.entityType === EntityTypes.department;\n\t\t\t}),\n\t\t);\n\n\t\tif (userDepartments.has(nodeId))\n\t\t{\n\t\t\treturn true;\n\t\t}\n\n\t\tlet currentDepartment = nodes.get(nodeId);\n\t\twhile (currentDepartment)\n\t\t{\n\t\t\tif (userDepartments.has(currentDepartment.id))\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (level === PermissionLevels.self && currentDepartment.type === EntityTypes.department)\n\t\t\t{\n\t\t\t\tif (action === PermissionActions.teamCreate)\n\t\t\t\t{\n\t\t\t\t\treturn this.hasPermission(PermissionActions.structureView, currentDepartment.id)\n\t\t\t\t\t\t&& userDepartments.has(currentDepartment.id)\n\t\t\t\t\t;\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tcurrentDepartment = nodes.get(currentDepartment.parentId);\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\nexport const PermissionChecker = new PermissionCheckerClass();\n"],"names":["createTreeDataStore","treeData","dataMap","Map","forEach","item","id","parentId","colorName","entityType","mapItem","get","teamColor","getNodeColorSettings","set","mapParentItem","children","chartAPI","removeDepartment","getData","nodeId","getDepartmentsData","tool","category","event","getCurrentDepartments","getDictionary","getUserId","firstTimeOpened","postData","PermissionActions","Object","freeze","structureView","departmentCreate","departmentDelete","departmentEdit","employeeAddToDepartment","employeeRemoveFromDepartment","employeeFire","accessEdit","teamAccessEdit","inviteToDepartment","teamView","teamCreate","teamEdit","teamDelete","teamAddMember","teamRemoveMember","teamSettingsEdit","PermissionLevels","fullCompany","selfAndSub","self","none","PermissionCheckerClass","constructor","instance","currentUserPermissions","permissionVariablesDictionary","isTeamsAvailable","isInitialized","getInstance","init","teamsAvailable","hasPermission","action","departmentId","minLevel","permissionLevel","hasPermissionWithAnyNode","TEAM","DEPARTMENT","hasPermissionOfAction","undefined","teamActions","includes","permissionValue","departments","useChartStore","currentNode","EntityTypes","department","permissionObject","find","rootId","values","userEntities","currentDepartments","userDepartments","Set","filter","has","currentDepartment","level","nodes","userTeams","team","type","PermissionChecker"],"mappings":"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"}