this.BX=this.BX||{};this.BX.Tasks=this.BX.Tasks||{};this.BX.Tasks.V2=this.BX.Tasks.V2||{};(function(t,e,s,i,a,n,l,r,o,d,c,h,p,u,v,b,k,m,B,f,E,C,I,P,g,y,L,F,H,T,S){"use strict";const $={components:{Hint:P.Hint,UiButton:E.Button},inject:["analytics"],props:{taskId:{type:[Number,String],required:true},isOpening:{type:Boolean,required:true}},emits:["update:isOpening"],setup(t){return{AirButtonStyle:E.AirButtonStyle,ButtonSize:E.ButtonSize,fileService:H.fileService.get(t.taskId)}},data(){return{isHintShown:false,hintBindElement:null}},computed:{task(){return this.$store.getters[`${I.Model.Tasks}/getById`](this.taskId)},checkLists(){var t;return(t=this.task)!=null&&t.checklist?this.$store.getters[`${I.Model.CheckList}/getByIds`](this.task.checklist):[]},isDisabled(){return this.isUploading||this.isCheckListUploading},isUploading(){return this.fileService.isUploading()},isCheckListUploading(){var t;return(t=this.task.checklist)==null?void 0:t.some((t=>H.fileService.get(t,H.EntityTypes.CheckListItem).isUploading()))}},methods:{handleClick(){if(this.isUploading){this.highlightFiles()}else if(this.isCheckListUploading){this.highlightChecklist()}else{this.openFullCard()}},highlightFiles(){this.hintBindElement=L.fieldHighlighter.setContainer(this.$root.$el).addChipHighlight(y.filesMeta.id);this.showHint()},highlightChecklist(){this.hintBindElement=L.fieldHighlighter.setContainer(this.$root.$el).addChipHighlight(g.checkListMeta.id);this.showHint()},showHint(){const t=()=>{this.isHintShown=false;f.Event.unbind(window,"keydown",t)};f.Event.bind(window,"keydown",t);this.isHintShown=true},openFullCard(){if(this.isOpening){return}this.$emit("update:isOpening",true);const t=C.Core.getParams().features;F.analytics.sendOpenFullCard(this.analytics);if(t.isMiniformEnabled&&!t.isV2Enabled){f.Event.EventEmitter.emit(`${I.EventName.OpenSliderCard}:${this.taskId}`,{task:this.task,checkLists:this.checkLists})}else{f.Event.EventEmitter.emit(`${I.EventName.OpenFullCard}:${this.taskId}`,this.taskId)}}},template:`\n\t\t<div\n\t\t\tclass="tasks-compact-card-full-button-container"\n\t\t\t:class="{ '--disabled': isDisabled }"\n\t\t\t@click="handleClick"\n\t\t>\n\t\t\t<UiButton\n\t\t\t\tclass="tasks-compact-card-full-button"\n\t\t\t\t:text="loc('TASKS_V2_TCC_FULL_CARD_BTN')"\n\t\t\t\t:size="ButtonSize.SMALL"\n\t\t\t\t:style="AirButtonStyle.PLAIN_NO_ACCENT"\n\t\t\t\t:loading="isOpening"\n\t\t\t\t:dataset="{taskButtonId: 'full'}"\n\t\t\t\t:disabled="isDisabled"\n\t\t\t/>\n\t\t</div>\n\t\t<Hint\n\t\t\tv-if="isHintShown"\n\t\t\t:bindElement="hintBindElement"\n\t\t\t@close="isHintShown = false"\n\t\t>\n\t\t\t{{ loc('TASKS_V2_TCC_FILE_IS_UPLOADING') }}\n\t\t</Hint>\n\t`};const w={components:{BIcon:T.BIcon},setup(){return{Main:S.Main}},template:`\n\t\t<div class="tasks-compact-card-drop-zone-container">\n\t\t\t<div class="tasks-compact-card-drop-zone">\n\t\t\t\t<BIcon :name="Main.ATTACH"/>\n\t\t\t\t<div class="tasks-compact-card-drop-zone-text">{{ loc('TASKS_V2_TCC_DROP_ZONE') }}</div>\n\t\t\t</div>\n\t\t</div>\n\t`};const O={name:"TaskCompactCard",components:{BIcon:T.BIcon,FieldTitle:c.Title,DescriptionInline:p.DescriptionInline,Importance:h.Importance,FieldList:u.FieldList,UiButton:E.Button,AddTaskButton:d.AddTaskButton,CheckListPopup:g.CheckListPopup,FullCardButton:$,DropZone:w},mixins:[r.DragOverMixin],provide(){return{analytics:this.analytics,cardType:I.CardType.Compact}},props:{taskId:{type:[Number,String],default:()=>f.Text.getRandom()},groupId:{type:[Number],required:false,default:null},deadlineTs:{type:[Number,null],required:false,default:null},analytics:{type:Object,default:()=>({})}},setup(){return{ButtonSize:E.ButtonSize,AirButtonStyle:E.AirButtonStyle,Outline:S.Outline}},data(){return{openingFullCard:false,isCheckListPopupShown:false,chipsEventHandlers:{showCheckList:this.showCheckListPopup},creationError:false,popupCount:0}},computed:{...n.mapGetters({titleFieldOffsetHeight:`${I.Model.Interface}/titleFieldOffsetHeight`,currentUserId:`${I.Model.Interface}/currentUserId`,defaultDeadline:`${I.Model.Interface}/defaultDeadline`}),hasDefaultDeadline(){return this.defaultDeadline.defaultDeadlineDate!==""},defaultDeadlineTs(){return new Date(this.defaultDeadline.defaultDeadlineDate).getTime()},task(){return this.$store.getters[`${I.Model.Tasks}/getById`](this.taskId)},group(){return this.$store.getters[`${I.Model.Groups}/getById`](this.task.groupId)},checkLists(){var t;return(t=this.task)!=null&&t.checklist?this.$store.getters[`${I.Model.CheckList}/getByIds`](this.task.checklist):[]},isEdit(){return f.Type.isNumber(this.taskId)&&this.taskId>0},primaryFields(){return[{title:v.responsibleMeta.title,component:v.Responsible,props:{taskId:this.taskId,context:this.$options.name}},{title:b.deadlineMeta.title,component:b.Deadline,props:{taskId:this.taskId}}]},chips(){return[y.FilesChip,g.CheckListChip,k.GroupChip]},titleDisabled(){return!this.task.rights.edit||this.isCheckListPopupShown}},created(){var t;if(!this.isEdit){this.destroy();const t={id:this.taskId,creatorId:this.currentUserId,responsibleId:this.currentUserId,...this.groupId?{groupId:this.groupId}:{}};if(this.deadlineTs!==null){t.deadlineTs=this.deadlineTs}else if(this.hasDefaultDeadline){t.deadlineTs=this.defaultDeadlineTs}this.insert(t)}this.fileService=H.fileService.get(this.taskId);F.analytics.sendOpenCard(this.analytics,{collabId:((t=this.group)==null?void 0:t.type)===I.GroupType.Collab?this.group.id:null})},mounted(){this.resizeObserver=new ResizeObserver((async t=>{const e=t.find((({target:t})=>t===this.$refs.title));if(e){await this.updateTitleFieldOffsetHeight(e.contentRect.height)}}));this.resizeObserver.observe(this.$refs.title);this.subscribeEvents();this.fileService.getAdapter().getUploader().assignDropzone(this.$el)},beforeUnmount(){if(this.resizeObserver){this.resizeObserver.disconnect()}this.unsubscribeEvents()},unmounted(){if(!this.isEdit&&this.openingFullCard===false){this.destroy()}},methods:{...n.mapActions(I.Model.Tasks,["insert","delete"]),...n.mapActions(I.Model.Interface,["updateTitleFieldOffsetHeight"]),close(){f.Event.EventEmitter.emit(`${I.EventName.CloseCard}:${this.taskId}`)},async addTask(){var t,e,s;const[a,n]=await m.taskService.add(this.task);if(!a){this.creationError=true;l.Notifier.notify({id:"task-message-add-error",text:n.message});this.sendAddTaskAnalytics(false);return}this.sendAddTaskAnalytics(true);F.analytics.sendDescription(this.analytics,{hasDescription:f.Type.isStringFilled((t=this.task)==null?void 0:t.description),hasScroll:(e=this.$refs)==null?void 0:(s=e.description)==null?void 0:s.hasScroll()});if(this.checkLists.length>0){await B.checkListService.save(a,this.checkLists)}H.fileService.replace(this.taskId,a);const r=new i.BaseEvent({data:a,compatData:["ADD",{task:this.task,options:{}}]});f.Event.EventEmitter.emit(I.EventName.NotifyGrid,r);const o=C.Core.getParams().features;if(o.isMiniformEnabled&&!o.isV2Enabled){this.close();return}f.Event.EventEmitter.emit(`${I.EventName.OpenFullCard}:${this.taskId}`,a);this.close()},sendAddTaskAnalytics(t){var e;const s=((e=this.group)==null?void 0:e.type)===I.GroupType.Collab?this.group.id:null;if(this.checkLists.length>0){const e=this.checkLists.filter((({parentId:t})=>t===0));const i=this.checkLists.filter((({parentId:t})=>t!==0));F.analytics.sendAddTaskWithCheckList(this.analytics,{isSuccess:t,collabId:s,viewersCount:this.task.auditorsIds.length,checklistCount:e.length,checklistItemsCount:i.length})}else{F.analytics.sendAddTask(this.analytics,{isSuccess:t,collabId:s,viewersCount:this.task.auditorsIds.length,coexecutorsCount:this.task.accomplicesIds.length})}},handleShowingPopup(t){f.Event.EventEmitter.emit(`${I.EventName.ShowOverlay}:${this.taskId}`,{taskId:this.taskId});this.externalPopup=t.popupInstance;this.adjustCardPopup(true);this.fileService.getAdapter().getUploader().unassignDropzone(this.$el)},handleHidingPopup(){f.Event.EventEmitter.emit(`${I.EventName.HideOverlay}:${this.taskId}`);f.Event.EventEmitter.emit(`${I.EventName.AdjustPosition}:${this.taskId}`);this.externalPopup=null;this.fileService.getAdapter().getUploader().assignDropzone(this.$el)},handleResizingPopup(){this.adjustCardPopup()},adjustCardPopup(t=false){if(!this.externalPopup){f.Event.EventEmitter.emit(`${I.EventName.AdjustPosition}:${this.taskId}`);return}f.Event.EventEmitter.emit(`${I.EventName.AdjustPosition}:${this.taskId}`,{titleFieldHeight:this.titleFieldOffsetHeight,innerPopup:this.externalPopup,animate:t})},showCheckListPopup(){this.isCheckListPopupShown=true},closeCheckListPopup(){this.isCheckListPopupShown=false},getEventListeners(t,e){const s={};if(t.emits){Object.keys(e).forEach((i=>{if(t.emits.includes(i)){s[i]=e[i]}}))}return s},subscribeEvents(){i.EventEmitter.subscribe("BX.Main.Popup:onShow",this.handlePopupShow);f.Event.bind(document,"keydown",this.handleKeyDown,{capture:true})},unsubscribeEvents(){i.EventEmitter.unsubscribe("BX.Main.Popup:onShow",this.handlePopupShow);f.Event.unbind(document,"keydown",this.handleKeyDown,{capture:true})},handlePopupShow(t){const e=t.getCompatData()[0];const s=()=>{e.unsubscribe("onClose",s);e.unsubscribe("onDestroy",s);this.popupCount--};e.subscribe("onClose",s);e.subscribe("onDestroy",s);this.popupCount++},handleKeyDown(t){if(this.popupCount>0){return}if(t.key==="Enter"&&(t.ctrlKey||t.metaKey)){this.$refs.addTaskButton.handleClick()}else if(t.key==="Escape"){this.close()}},destroy(){this.delete(this.taskId);H.fileService.delete(this.taskId)}},template:`\n\t\t<div v-drop class="tasks-compact-card-container">\n\t\t\t<div v-if="task" class="tasks-compact-card" :data-task-id="taskId" data-task-compact>\n\t\t\t\t<div class="tasks-compact-card-fields">\n\t\t\t\t\t<div\n\t\t\t\t\t\tclass="tasks-compact-card-fields-title"\n\t\t\t\t\t\t:class="{'--no-gap': task.description.length > 0}"\n\t\t\t\t\t\tref="title"\n\t\t\t\t\t>\n\t\t\t\t\t\t<FieldTitle :taskId="taskId" :disabled="titleDisabled"/>\n\t\t\t\t\t\t<Importance :taskId="taskId"/>\n\t\t\t\t\t\t<BIcon\n\t\t\t\t\t\t\tclass="tasks-compact-card-fields-close"\n\t\t\t\t\t\t\t:name="Outline.CROSS_L"\n\t\t\t\t\t\t\tdata-task-button-id="close"\n\t\t\t\t\t\t\t@click="close"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<DescriptionInline ref="description" :taskId="taskId"/>\n\t\t\t\t\t<div class="tasks-compact-card-fields-list">\n\t\t\t\t\t\t<FieldList :fields="primaryFields"/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<CheckListPopup\n\t\t\t\t\t\tv-if="isCheckListPopupShown"\n\t\t\t\t\t\t:taskId="taskId"\n\t\t\t\t\t\t@show="handleShowingPopup"\n\t\t\t\t\t\t@close="handleHidingPopup(); closeCheckListPopup();"\n\t\t\t\t\t\t@resize="handleResizingPopup"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div class="tasks-compact-card-footer">\n\t\t\t\t\t<div class="tasks-compact-card-chips">\n\t\t\t\t\t\t<template v-for="(chip, index) of chips" :key="index">\n\t\t\t\t\t\t\t<component\n\t\t\t\t\t\t\t\t:is="chip"\n\t\t\t\t\t\t\t\tv-bind="{ taskId, isAutonomous: true }"\n\t\t\t\t\t\t\t\tv-on="getEventListeners(chip, chipsEventHandlers)"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="tasks-compact-card-buttons">\n\t\t\t\t\t\t<div class="tasks-compact-card-main-buttons">\n\t\t\t\t\t\t\t<AddTaskButton\n\t\t\t\t\t\t\t\tref="addTaskButton"\n\t\t\t\t\t\t\t\t:taskId="taskId"\n\t\t\t\t\t\t\t\t:size="ButtonSize.MEDIUM"\n\t\t\t\t\t\t\t\tv-model:hasError="creationError"\n\t\t\t\t\t\t\t\t@addTask="addTask"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<UiButton\n\t\t\t\t\t\t\t\t:text="loc('TASKS_V2_TCC_CANCEL_BTN')"\n\t\t\t\t\t\t\t\t:size="ButtonSize.MEDIUM"\n\t\t\t\t\t\t\t\t:style="AirButtonStyle.PLAIN"\n\t\t\t\t\t\t\t\t:dataset="{\n\t\t\t\t\t\t\t\t\ttaskButtonId: 'cancel',\n\t\t\t\t\t\t\t\t}"\n\t\t\t\t\t\t\t\t@click="close"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<FullCardButton v-model:isOpening="openingFullCard" :taskId="taskId"/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<DropZone/>\n\t\t</div>\n\t`};var D=babelHelpers.classPrivateFieldLooseKey("params");var A=babelHelpers.classPrivateFieldLooseKey("application");var X=babelHelpers.classPrivateFieldLooseKey("mountApplication");var N=babelHelpers.classPrivateFieldLooseKey("unmountApplication");var M=babelHelpers.classPrivateFieldLooseKey("subscribe");var V=babelHelpers.classPrivateFieldLooseKey("unsubscribe");var U=babelHelpers.classPrivateFieldLooseKey("closeCard");var j=babelHelpers.classPrivateFieldLooseKey("openFullCard");var z=babelHelpers.classPrivateFieldLooseKey("openSliderCard");var x=babelHelpers.classPrivateFieldLooseKey("showOverlay");var K=babelHelpers.classPrivateFieldLooseKey("hideOverlay");var _=babelHelpers.classPrivateFieldLooseKey("adjustPosition");class R extends i.EventEmitter{constructor(t={}){super(t);Object.defineProperty(this,V,{value:W});Object.defineProperty(this,M,{value:Z});Object.defineProperty(this,N,{value:q});Object.defineProperty(this,X,{value:G});Object.defineProperty(this,D,{writable:true,value:void 0});Object.defineProperty(this,A,{writable:true,value:null});Object.defineProperty(this,U,{writable:true,value:()=>{this.emit("closeCard")}});Object.defineProperty(this,j,{writable:true,value:t=>{babelHelpers.classPrivateFieldLooseBase(this,D)[D].taskId=t.getData();this.emit("openFullCard",babelHelpers.classPrivateFieldLooseBase(this,D)[D].taskId)}});Object.defineProperty(this,z,{writable:true,value:t=>{const e=t.getData().task;const s=t.getData().checkLists;const i=m.TaskMappers.mapModelToSliderData(e,s);const a=C.Core.getParams().paths.editPath;BX.SidePanel.Instance.open(a,{requestMethod:"post",requestParams:i,cacheable:false});babelHelpers.classPrivateFieldLooseBase(this,U)[U]()}});Object.defineProperty(this,x,{writable:true,value:()=>{this.emit("showOverlay")}});Object.defineProperty(this,K,{writable:true,value:()=>{this.emit("hideOverlay")}});Object.defineProperty(this,_,{writable:true,value:(t=null)=>{var e;this.emit("adjustPosition",(e=t==null?void 0:t.getData())!=null?e:{})}});this.setEventNamespace("Tasks:TaskCompactCard");babelHelpers.classPrivateFieldLooseBase(this,D)[D]=t;babelHelpers.classPrivateFieldLooseBase(this,D)[D].taskId=f.Type.isUndefined(babelHelpers.classPrivateFieldLooseBase(this,D)[D].taskId)?0:babelHelpers.classPrivateFieldLooseBase(this,D)[D].taskId}async mountCard(t){await babelHelpers.classPrivateFieldLooseBase(this,X)[X](t);babelHelpers.classPrivateFieldLooseBase(this,_)[_]();babelHelpers.classPrivateFieldLooseBase(this,M)[M]()}unmountCard(){babelHelpers.classPrivateFieldLooseBase(this,N)[N]();babelHelpers.classPrivateFieldLooseBase(this,V)[V]()}}async function G(t){await C.Core.init();const i=e.BitrixVue.createApp(O,babelHelpers.classPrivateFieldLooseBase(this,D)[D]);i.mixin(s.locMixin);i.use(C.Core.getStore());i.mount(t);babelHelpers.classPrivateFieldLooseBase(this,A)[A]=i}function q(){babelHelpers.classPrivateFieldLooseBase(this,A)[A].unmount()}function Z(){i.EventEmitter.subscribe(`${I.EventName.CloseCard}:${babelHelpers.classPrivateFieldLooseBase(this,D)[D].taskId}`,babelHelpers.classPrivateFieldLooseBase(this,U)[U]);i.EventEmitter.subscribe(`${I.EventName.OpenFullCard}:${babelHelpers.classPrivateFieldLooseBase(this,D)[D].taskId}`,babelHelpers.classPrivateFieldLooseBase(this,j)[j]);i.EventEmitter.subscribe(`${I.EventName.OpenSliderCard}:${babelHelpers.classPrivateFieldLooseBase(this,D)[D].taskId}`,babelHelpers.classPrivateFieldLooseBase(this,z)[z]);i.EventEmitter.subscribe(`${I.EventName.ShowOverlay}:${babelHelpers.classPrivateFieldLooseBase(this,D)[D].taskId}`,babelHelpers.classPrivateFieldLooseBase(this,x)[x]);i.EventEmitter.subscribe(`${I.EventName.HideOverlay}:${babelHelpers.classPrivateFieldLooseBase(this,D)[D].taskId}`,babelHelpers.classPrivateFieldLooseBase(this,K)[K]);i.EventEmitter.subscribe(`${I.EventName.AdjustPosition}:${babelHelpers.classPrivateFieldLooseBase(this,D)[D].taskId}`,babelHelpers.classPrivateFieldLooseBase(this,_)[_])}function W(){i.EventEmitter.unsubscribe(`${I.EventName.CloseCard}:${babelHelpers.classPrivateFieldLooseBase(this,D)[D].taskId}`,babelHelpers.classPrivateFieldLooseBase(this,U)[U]);i.EventEmitter.unsubscribe(`${I.EventName.OpenFullCard}:${babelHelpers.classPrivateFieldLooseBase(this,D)[D].taskId}`,babelHelpers.classPrivateFieldLooseBase(this,j)[j]);i.EventEmitter.unsubscribe(`${I.EventName.OpenSliderCard}:${babelHelpers.classPrivateFieldLooseBase(this,D)[D].taskId}`,babelHelpers.classPrivateFieldLooseBase(this,z)[z]);i.EventEmitter.unsubscribe(`${I.EventName.ShowOverlay}:${babelHelpers.classPrivateFieldLooseBase(this,D)[D].taskId}`,babelHelpers.classPrivateFieldLooseBase(this,x)[x]);i.EventEmitter.unsubscribe(`${I.EventName.HideOverlay}:${babelHelpers.classPrivateFieldLooseBase(this,D)[D].taskId}`,babelHelpers.classPrivateFieldLooseBase(this,K)[K]);i.EventEmitter.unsubscribe(`${I.EventName.AdjustPosition}:${babelHelpers.classPrivateFieldLooseBase(this,D)[D].taskId}`,babelHelpers.classPrivateFieldLooseBase(this,_)[_])}t.TaskCompactCard=R})(this.BX.Tasks.V2.Application=this.BX.Tasks.V2.Application||{},BX.Vue3,BX.Vue3.Mixins,BX.Event,BX.Main,BX.Vue3.Vuex,BX.UI.NotificationManager,BX.UI.Uploader,BX,BX.Tasks.V2.Component,BX.Tasks.V2.Component.Fields,BX.Tasks.V2.Component.Fields,BX.Tasks.V2.Component.Fields,BX.Tasks.V2.Component.Elements,BX.Tasks.V2.Component.Fields,BX.Tasks.V2.Component.Fields,BX.Tasks.V2.Component.Fields,BX.Tasks.V2.Provider.Service,BX.Tasks.V2.Provider.Service,BX,BX.Vue3.Components,BX.Tasks.V2,BX.Tasks.V2.Const,BX.Tasks.V2.Component.Elements,BX.Tasks.V2.Component.Fields,BX.Tasks.V2.Component.Fields,BX.Tasks.V2.Lib,BX.Tasks.V2.Lib,BX.Tasks.V2.Provider.Service,BX.UI.IconSet,BX.UI.IconSet);
//# sourceMappingURL=task-compact-card.bundle.map.js