this.BX=this.BX||{};this.BX.Tasks=this.BX.Tasks||{};this.BX.Tasks.V2=this.BX.Tasks.V2||{};this.BX.Tasks.V2.Provider=this.BX.Tasks.V2.Provider||{};(function(e,s,t,a,i,l,r,o,d){"use strict";function b(e){return{serverFileId:e.id,serverId:e.serverId,type:e.type,name:e.name,size:e.size,width:e.width,height:e.height,isImage:e.isImage,isVideo:e.isVideo,treatImageAsFile:e.treatImageAsFile,downloadUrl:e.downloadUrl,serverPreviewUrl:e.serverPreviewUrl,serverPreviewWidth:e.serverPreviewWidth,serverPreviewHeight:e.serverPreviewHeight,customData:e.customData}}const c=Object.freeze({Task:"task",CheckListItem:"checkListItem"});var n=babelHelpers.classPrivateFieldLooseKey("entityId");var v=babelHelpers.classPrivateFieldLooseKey("entityType");var p=babelHelpers.classPrivateFieldLooseKey("menu");var h=babelHelpers.classPrivateFieldLooseKey("loadedIds");var P=babelHelpers.classPrivateFieldLooseKey("objectsIds");var u=babelHelpers.classPrivateFieldLooseKey("promises");var F=babelHelpers.classPrivateFieldLooseKey("adapter");var L=babelHelpers.classPrivateFieldLooseKey("browseElement");var B=babelHelpers.classPrivateFieldLooseKey("addFiles");var H=babelHelpers.classPrivateFieldLooseKey("addLoadedIds");var m=babelHelpers.classPrivateFieldLooseKey("addLoadedObjectsIds");var y=babelHelpers.classPrivateFieldLooseKey("removeLoadedObjectsIds");var f=babelHelpers.classPrivateFieldLooseKey("getIdsByObjectId");var I=babelHelpers.classPrivateFieldLooseKey("updateEntity");var g=babelHelpers.classPrivateFieldLooseKey("entityFileIds");class w extends s.EventEmitter{constructor(e,s=c.Task){super();Object.defineProperty(this,g,{get:D,set:void 0});Object.defineProperty(this,I,{value:E});Object.defineProperty(this,f,{value:U});Object.defineProperty(this,y,{value:T});Object.defineProperty(this,m,{value:j});Object.defineProperty(this,H,{value:O});Object.defineProperty(this,B,{value:k});Object.defineProperty(this,n,{writable:true,value:void 0});Object.defineProperty(this,v,{writable:true,value:void 0});Object.defineProperty(this,p,{writable:true,value:void 0});Object.defineProperty(this,h,{writable:true,value:new Set});Object.defineProperty(this,P,{writable:true,value:{}});Object.defineProperty(this,u,{writable:true,value:[]});Object.defineProperty(this,F,{writable:true,value:void 0});Object.defineProperty(this,L,{writable:true,value:void 0});this.setEventNamespace("Tasks.V2.Provider.Service.FileService");this.setEntityId(e,s);babelHelpers.classPrivateFieldLooseBase(this,F)[F]=new a.VueUploaderAdapter({id:S(e,s),controller:"disk.uf.integration.diskUploaderController",imagePreviewHeight:1200,imagePreviewWidth:1200,imagePreviewQuality:.85,treatOversizeImageAsFile:true,multiple:true,maxFileSize:null});babelHelpers.classPrivateFieldLooseBase(this,F)[F].subscribeFromOptions({"Item:onAdd":e=>{const{item:s}=e.getData();babelHelpers.classPrivateFieldLooseBase(this,H)[H]([s.serverFileId]);this.emit("onFileAdd")},"Item:onComplete":e=>{const{item:s}=e.getData();babelHelpers.classPrivateFieldLooseBase(this,m)[m]([s]);const t=new Set(babelHelpers.classPrivateFieldLooseBase(this,g)[g]);if(!babelHelpers.classPrivateFieldLooseBase(this,f)[f](s.customData.objectId).some((e=>t.has(e)))){babelHelpers.classPrivateFieldLooseBase(this,I)[I]({fileIds:[...t,s.serverFileId]})}this.emit("onFileComplete",s)},"Item:onRemove":e=>{const{item:s}=e.getData();const t=new Set(babelHelpers.classPrivateFieldLooseBase(this,f)[f](s.customData.objectId));babelHelpers.classPrivateFieldLooseBase(this,y)[y](t);babelHelpers.classPrivateFieldLooseBase(this,I)[I]({fileIds:babelHelpers.classPrivateFieldLooseBase(this,g)[g].filter((e=>!t.has(e)))})}})}setEntityId(e,s=c.Task){babelHelpers.classPrivateFieldLooseBase(this,n)[n]=e;babelHelpers.classPrivateFieldLooseBase(this,v)[v]=s}getEntityId(){return S(babelHelpers.classPrivateFieldLooseBase(this,n)[n],babelHelpers.classPrivateFieldLooseBase(this,v)[v])}getAdapter(){return babelHelpers.classPrivateFieldLooseBase(this,F)[F]}getFiles(){return babelHelpers.classPrivateFieldLooseBase(this,F)[F].getReactiveItems()}isUploading(){return babelHelpers.classPrivateFieldLooseBase(this,F)[F].getItems().some((({status:e})=>[t.FileStatus.UPLOADING,t.FileStatus.LOADING].includes(e)))}browse(e){var s,t;(t=(s=babelHelpers.classPrivateFieldLooseBase(this,p))[p])!=null?t:s[p]=new i.UserFieldMenu({dialogId:"task-card",uploader:babelHelpers.classPrivateFieldLooseBase(this,F)[F].getUploader(),menuOptions:{minWidth:220,animation:"fading",closeByEsc:true,bindOptions:{forceBindPosition:true,forceTop:true,position:"top"},events:{onPopupClose:()=>{e.onHideCallback==null?void 0:e.onHideCallback()}}},compact:true});babelHelpers.classPrivateFieldLooseBase(this,p)[p].show(e.bindElement)}browseFiles(){if(!babelHelpers.classPrivateFieldLooseBase(this,L)[L]){babelHelpers.classPrivateFieldLooseBase(this,L)[L]=document.createElement("div");babelHelpers.classPrivateFieldLooseBase(this,F)[F].getUploader().assignBrowse(babelHelpers.classPrivateFieldLooseBase(this,L)[L])}babelHelpers.classPrivateFieldLooseBase(this,L)[L].click()}browseMyDrive(){i.openDiskFileDialog({dialogId:"task-card",uploader:babelHelpers.classPrivateFieldLooseBase(this,F)[F].getUploader()})}destroy(){babelHelpers.classPrivateFieldLooseBase(this,F)[F].unsubscribeAll("Item:onAdd");babelHelpers.classPrivateFieldLooseBase(this,F)[F].unsubscribeAll("Item:onComplete");babelHelpers.classPrivateFieldLooseBase(this,F)[F].unsubscribeAll("Item:onRemove");babelHelpers.classPrivateFieldLooseBase(this,F)[F].getUploader().destroy()}async uploadFromClipboard(e){const{clipboardEvent:s}=e;const{clipboardData:a}=s;if(!a||!t.isFilePasted(a)){return[]}s.preventDefault();const i=await t.getFilesFromDataTransfer(a);return babelHelpers.classPrivateFieldLooseBase(this,B)[B](i)}async sync(e){if(e.every((e=>babelHelpers.classPrivateFieldLooseBase(this,h)[h].has(e)))){babelHelpers.classPrivateFieldLooseBase(this,F)[F].getItems().forEach((s=>{const t=[s.serverFileId];if(s.serverFileId[0]==="n"){const e=Number(s.serverFileId.slice(1));t.push(...babelHelpers.classPrivateFieldLooseBase(this,f)[f](e))}if(t.some((s=>e.includes(s)))){return}babelHelpers.classPrivateFieldLooseBase(this,F)[F].getUploader().removeFile(s.id)}))}await this.list(e)}async list(e){const s=e.filter((e=>e[0]!=="n"&&!babelHelpers.classPrivateFieldLooseBase(this,h)[h].has(e)));if(s.length===0){await Promise.all(babelHelpers.classPrivateFieldLooseBase(this,u)[u]);return babelHelpers.classPrivateFieldLooseBase(this,F)[F].getItems()}const t=new K;babelHelpers.classPrivateFieldLooseBase(this,u)[u].push(t);babelHelpers.classPrivateFieldLooseBase(this,H)[H](s);try{const e=await o.apiClient.post("File.list",{ids:s});const a=e.map((e=>b(e)));const i=new Set(Object.values(babelHelpers.classPrivateFieldLooseBase(this,P)[P]));const l=a.filter((({customData:e})=>!i.has(e.objectId)));babelHelpers.classPrivateFieldLooseBase(this,F)[F].getUploader().addFiles(l);babelHelpers.classPrivateFieldLooseBase(this,m)[m](a);t.resolve();await Promise.all(babelHelpers.classPrivateFieldLooseBase(this,u)[u]);return babelHelpers.classPrivateFieldLooseBase(this,F)[F].getItems()}catch(e){console.error("FileService: list error",e);return[]}}get $store(){return r.Core.getStore()}}function k(e){const s=babelHelpers.classPrivateFieldLooseBase(this,F)[F].getUploader();return s.addFiles(e)}function O(e){e.forEach((e=>babelHelpers.classPrivateFieldLooseBase(this,h)[h].add(e)))}function j(e){e.forEach((e=>{babelHelpers.classPrivateFieldLooseBase(this,P)[P][e.serverFileId]=e.customData.objectId}))}function T(e){e.forEach((e=>{delete babelHelpers.classPrivateFieldLooseBase(this,P)[P][e]}))}function U(e){return Object.entries(babelHelpers.classPrivateFieldLooseBase(this,P)[P]).filter((([,s])=>s===e)).map((([e])=>e[0]==="n"?e:Number(e)))}function E(e){if(babelHelpers.classPrivateFieldLooseBase(this,v)[v]===c.Task){void d.taskService.update(babelHelpers.classPrivateFieldLooseBase(this,n)[n],e)}else if(babelHelpers.classPrivateFieldLooseBase(this,v)[v]===c.CheckListItem){void this.$store.dispatch(`${l.Model.CheckList}/update`,{id:babelHelpers.classPrivateFieldLooseBase(this,n)[n],fields:{attachments:e.fileIds}})}}function D(){if(babelHelpers.classPrivateFieldLooseBase(this,v)[v]===c.Task){return this.$store.getters[`${l.Model.Tasks}/getById`](babelHelpers.classPrivateFieldLooseBase(this,n)[n]).fileIds}return this.$store.getters[`${l.Model.CheckList}/getById`](babelHelpers.classPrivateFieldLooseBase(this,n)[n]).attachments}const X={};function S(e,s){return`${s}:${e}`}const C={get(e,s=c.Task){var t;const a=S(e,s);(t=X[a])!=null?t:X[a]=new w(e,s);return X[a]},replace(e,s,t=c.Task){const a=S(e,t);const i=S(s,t);X[i]=X[a];X[i].setEntityId(s,t);delete X[a]},delete(e,s=c.Task){var t;const a=S(e,s);(t=X[a])==null?void 0:t.destroy();delete X[a]}};function K(){const e=new Promise((e=>{this.resolve=e}));e.resolve=this.resolve;return e}e.fileService=C;e.EntityTypes=c})(this.BX.Tasks.V2.Provider.Service=this.BX.Tasks.V2.Provider.Service||{},BX.Event,BX.UI.Uploader,BX.UI.Uploader,BX.Disk.Uploader,BX.Tasks.V2.Const,BX.Tasks.V2,BX.Tasks.V2.Lib,BX.Tasks.V2.Provider.Service);
//# sourceMappingURL=file-service.bundle.map.js