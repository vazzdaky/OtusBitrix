{"version":3,"file":"user-service.bundle.js","sources":["../src/mappers.js","../src/user-service.js","../src/index.js"],"sourcesContent":["import type { UserModel } from 'tasks.v2.model.users';\nimport type { UserDto } from './types';\n\nexport function mapModelToDto(user: UserModel): UserDto\n{\n\treturn {\n\t\tid: user.id,\n\t\tname: user.name,\n\t\timage: user.image,\n\t\ttype: user.type,\n\t};\n}\n\nexport function mapDtoToModel(userDto: UserDto): UserModel\n{\n\treturn {\n\t\tid: userDto.id,\n\t\tname: userDto.name,\n\t\timage: userDto.image,\n\t\ttype: userDto.type,\n\t};\n}\n","import type { Store } from 'ui.vue3.vuex';\n\nimport { Model } from 'tasks.v2.const';\nimport { Core } from 'tasks.v2.core';\nimport { apiClient } from 'tasks.v2.lib.api-client';\nimport type { UserModel } from 'tasks.v2.model.users';\n\nimport { mapDtoToModel } from './mappers';\nimport type { UserDto } from './types';\n\nclass UserService\n{\n\tgetUrl(id: number): string\n\t{\n\t\treturn `/company/personal/user/${id}/`;\n\t}\n\n\tasync list(ids: number[]): Promise<void>\n\t{\n\t\tconst unloadedIds = this.#getUnloadedIds(ids);\n\t\tif (unloadedIds.length === 0)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\ttry\n\t\t{\n\t\t\tconst data = await apiClient.post('User.list', { ids: unloadedIds });\n\n\t\t\tconst users = data.map((user: UserDto) => mapDtoToModel(user));\n\n\t\t\tawait this.$store.dispatch(`${Model.Users}/upsertMany`, users);\n\t\t}\n\t\tcatch (error)\n\t\t{\n\t\t\tconsole.error('UserService: list error', error);\n\t\t}\n\t}\n\n\thasUsers(ids: number[]): boolean\n\t{\n\t\treturn this.#getUnloadedIds(ids).length === 0;\n\t}\n\n\t#getUnloadedIds(ids: number[]): number[]\n\t{\n\t\tconst loadedUsers: UserModel[] = this.$store.getters[`${Model.Users}/getByIds`](ids);\n\t\tconst loadedIds = new Set(loadedUsers.map(({ id }) => id));\n\n\t\treturn ids.filter((id: number) => !loadedIds.has(id));\n\t}\n\n\tget $store(): Store\n\t{\n\t\treturn Core.getStore();\n\t}\n}\n\nexport const userService = new UserService();\n","import { mapModelToDto, mapDtoToModel } from './mappers';\n\nexport { userService } from './user-service';\nexport const UserMappers = { mapModelToDto, mapDtoToModel };\nexport type { UserDto } from './types';\n"],"names":["mapModelToDto","user","id","name","image","type","mapDtoToModel","userDto","UserService","getUrl","list","ids","unloadedIds","length","data","apiClient","post","users","map","$store","dispatch","Model","Users","error","console","hasUsers","Core","getStore","loadedUsers","getters","loadedIds","Set","filter","has","userService","UserMappers"],"mappings":";;;;;;;;CAGO,SAASA,aAAa,CAACC,IAAe,EAC7C;GACC,OAAO;KACNC,EAAE,EAAED,IAAI,CAACC,EAAE;KACXC,IAAI,EAAEF,IAAI,CAACE,IAAI;KACfC,KAAK,EAAEH,IAAI,CAACG,KAAK;KACjBC,IAAI,EAAEJ,IAAI,CAACI;IACX;CACF;AAEA,CAAO,SAASC,aAAa,CAACC,OAAgB,EAC9C;GACC,OAAO;KACNL,EAAE,EAAEK,OAAO,CAACL,EAAE;KACdC,IAAI,EAAEI,OAAO,CAACJ,IAAI;KAClBC,KAAK,EAAEG,OAAO,CAACH,KAAK;KACpBC,IAAI,EAAEE,OAAO,CAACF;IACd;CACF;;CCd0C;CAG1C,MAAMG,WAAW,CACjB;GAAA;KAAA;OAAA;;;GACCC,MAAM,CAACP,EAAU,EACjB;KACC,OAAQ,0BAAyBA,EAAG,GAAE;;GAGvC,MAAMQ,IAAI,CAACC,GAAa,EACxB;KACC,MAAMC,WAAW,2CAAG,IAAI,oCAAiBD,GAAG,CAAC;KAC7C,IAAIC,WAAW,CAACC,MAAM,KAAK,CAAC,EAC5B;OACC;;KAGD,IACA;OACC,MAAMC,IAAI,GAAG,MAAMC,gCAAS,CAACC,IAAI,CAAC,WAAW,EAAE;SAAEL,GAAG,EAAEC;QAAa,CAAC;OAEpE,MAAMK,KAAK,GAAGH,IAAI,CAACI,GAAG,CAAEjB,IAAa,IAAKK,aAAa,CAACL,IAAI,CAAC,CAAC;OAE9D,MAAM,IAAI,CAACkB,MAAM,CAACC,QAAQ,CAAE,GAAEC,oBAAK,CAACC,KAAM,aAAY,EAAEL,KAAK,CAAC;MAC9D,CACD,OAAOM,KAAK,EACZ;OACCC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;;;GAIjDE,QAAQ,CAACd,GAAa,EACtB;KACC,OAAO,4CAAI,oCAAiBA,GAAG,EAAEE,MAAM,KAAK,CAAC;;GAW9C,IAAIM,MAAM,GACV;KACC,OAAOO,kBAAI,CAACC,QAAQ,EAAE;;CAExB;CAAC,0BAZgBhB,GAAa,EAC7B;GACC,MAAMiB,WAAwB,GAAG,IAAI,CAACT,MAAM,CAACU,OAAO,CAAE,GAAER,oBAAK,CAACC,KAAM,WAAU,CAAC,CAACX,GAAG,CAAC;GACpF,MAAMmB,SAAS,GAAG,IAAIC,GAAG,CAACH,WAAW,CAACV,GAAG,CAAC,CAAC;KAAEhB;IAAI,KAAKA,EAAE,CAAC,CAAC;GAE1D,OAAOS,GAAG,CAACqB,MAAM,CAAE9B,EAAU,IAAK,CAAC4B,SAAS,CAACG,GAAG,CAAC/B,EAAE,CAAC,CAAC;CACtD;AAQD,OAAagC,WAAW,GAAG,IAAI1B,WAAW,EAAE;;OCvD/B2B,WAAW,GAAG;GAAEnC,aAAa;GAAEM;CAAc,CAAC;;;;;;;;;"}