this.BX=this.BX||{};this.BX.Tasks=this.BX.Tasks||{};this.BX.Tasks.V2=this.BX.Tasks.V2||{};this.BX.Tasks.V2.Component=this.BX.Tasks.V2.Component||{};(function(t,e,s,i,n,r,o,a,l,u,d,h,c,p,m){"use strict";const g=Object.freeze({dialogOptions:(t,e)=>{const s=p.Core.getParams().limits;return{id:`tasks-user-selector-dialog-${e}-${t}`,context:"tasks-card",multiple:true,enableSearch:true,entities:[{id:m.EntitySelectorEntity.User,options:{emailUsers:true,inviteGuestLink:true,analyticsSource:"tasks",lockGuestLink:!s.mailUserIntegration,lockGuestLinkFeatureId:s.mailUserIntegrationFeatureId}},{id:"department"}]}}});const k=4;const I={name:"TaskParticipantList",components:{BIcon:r.BIcon,UserAvatarListUsers:c.UserAvatarListUsers,BMenu:i.BMenu,Popup:n.Popup},props:{taskId:{type:[Number,String],required:true},dataset:{type:Object,required:true},context:{type:String,required:true},users:{type:Array,required:true}},emits:["update"],setup(){return{Outline:o.Outline}},data(){return{menuUserId:null,addBackgroundHovered:false,isDialogShown:false,isPopupShown:false}},computed:{task(){return this.$store.getters[`${m.Model.Tasks}/getById`](this.taskId)},withActionMenu(){return e.Type.isNumber(this.taskId)&&this.taskId>0},testId(){return`${this.$options.name}-${this.context}-${this.taskId}`},popupOptions(){return()=>({id:"tasks-participant-list-more-popup",bindElement:this.$refs.more,padding:18,maxWidth:300,maxHeight:window.innerHeight/2-40,offsetTop:8,offsetLeft:-18,targetContainer:document.body})},menuOptions(){var t;const e=this.menuUserId;return{id:"tasks-participant-list-menu-user",bindElement:(t=this.$refs.userList.getNode(e))!=null?t:this.$refs.popupUserList.getNode(e),items:this.getMenuItems(e),offsetTop:8,targetContainer:document.body}},moreFormatted(){return this.loc("TASKS_V2_PARTICIPANT_LIST_MORE_COUNT",{"#COUNT#":this.popupUsers.length})},displayedUsers(){return this.users.slice(0,k-(this.usersLength>k))},popupUsers(){return this.users.slice(k-(this.usersLength>k))},usersLength(){return this.users.length},readonly(){return!this.task.rights.edit}},watch:{usersLength(){if(this.popupUsers.length===0){this.isPopupShown=false}}},mounted(){u.heightTransition.animate(this.$el)},updated(){u.heightTransition.animate(this.$el)},beforeUnmount(){var t;(t=this.selector)==null?void 0:t.destroy()},methods:{handleClick(t){if(this.readonly){d.hrefClick(h.userService.getUrl(t));return}if(this.withActionMenu){this.showMenu(t)}else{this.showDialog()}},showMenu(t){if(this.menuUserId!==t){setTimeout((()=>{this.menuUserId=t}))}},showDialog(){var t,e;if((t=this.selector)!=null&&t.getDialog().isOpen()){return}(e=this.selector)!=null?e:this.selector=this.createDialog();this.selector.selectItemsByIds(this.getPreselected(this.users));this.selector.show(window.innerHeight<700?this.$refs.anchor:this.$refs.users)},createDialog(){const t=new l.UserSelectorDialog({taskId:this.taskId,preselected:this.getPreselected(this.users),dialogOptions:{...g.dialogOptions(this.taskId,this.context),height:window.innerHeight/2-80}});t.getDialog().getPopup().subscribeFromOptions({onShow:()=>{this.isDialogShown=true},onClose:()=>{this.isDialogShown=false;if(t.getDialog().isLoaded()){this.updateUsers(this.getSelectedUsers())}}});return t},getSelectedUsers(){return this.selector.getDialog().getSelectedItems().map((t=>({id:t.getId(),name:t.getTitle(),image:t.getAvatar()})))},getMenuItems(t){return[{title:this.loc("TASKS_V2_PARTICIPANT_LIST_USER_MENU_PROFILE"),icon:o.Outline.PERSON,dataset:{id:`UserMenuProfile-${this.testId}`},onClick:()=>d.hrefClick(h.userService.getUrl(t))},{design:i.MenuItemDesign.Alert,title:this.loc("TASKS_V2_PARTICIPANT_LIST_USER_MENU_REMOVE"),icon:o.Outline.TRASHCAN,dataset:{id:`UserMenuRemove-${this.testId}`},onClick:()=>this.removeUser(t)}]},removeUser(t){var e;const s=(e=this.selector)==null?void 0:e.getDialog().isOpen();const i=s?this.getSelectedUsers():this.users;const n=i.filter((({id:e})=>e!==t));if(s){this.selector.selectItemsByIds(this.getPreselected(n))}this.updateUsers(n)},updateUsers(t){this.$emit("update",t)},getPreselected(t){return t.map((({id:t})=>[m.EntitySelectorEntity.User,t]))}},template:`\n\t\t<div class="tasks-field-participant-list" v-bind="dataset" ref="users">\n\t\t\t<div v-if="usersLength > 0" class="tasks-field-users">\n\t\t\t\t<div\n\t\t\t\t\tv-if="!readonly"\n\t\t\t\t\tclass="tasks-field-users-add-background"\n\t\t\t\t\t@click="showDialog"\n\t\t\t\t\t@mouseenter="addBackgroundHovered = true"\n\t\t\t\t\t@mouseleave="addBackgroundHovered = false"\n\t\t\t\t></div>\n\t\t\t\t<UserAvatarListUsers\n\t\t\t\t\t:users="displayedUsers"\n\t\t\t\t\t:withCross="!withActionMenu"\n\t\t\t\t\tref="userList"\n\t\t\t\t\t@onClick="(userId) => handleClick(userId)"\n\t\t\t\t\t@onCrossClick="(userId) => removeUser(userId)"\n\t\t\t\t>\n\t\t\t\t\t<template #addButton>\n\t\t\t\t\t\t<BIcon\n\t\t\t\t\t\t\tclass="tasks-field-user-add"\n\t\t\t\t\t\t\t:class="{ '--active': addBackgroundHovered || isDialogShown }"\n\t\t\t\t\t\t\t:name="Outline.PLUS_L"\n\t\t\t\t\t\t\t@click="showDialog"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</template>\n\t\t\t\t</UserAvatarListUsers>\n\t\t\t\t<div\n\t\t\t\t\tv-if="popupUsers.length > 0"\n\t\t\t\t\tclass="tasks-field-participant-list-more"\n\t\t\t\t\tref="more"\n\t\t\t\t\t@click="isPopupShown = true"\n\t\t\t\t>\n\t\t\t\t\t{{ moreFormatted }}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div v-else class="tasks-field-participant-list-empty" @click="showDialog">\n\t\t\t\t<BIcon :name="Outline.PERSON"/>\n\t\t\t\t<div class="tasks-field-participant-list-empty-text">\n\t\t\t\t\t{{ loc('TASKS_V2_PARTICIPANT_LIST_ADD') }}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class="tasks-field-participant-list-anchor" ref="anchor"></div>\n\t\t</div>\n\t\t<BMenu v-if="menuUserId" :options="menuOptions" @close="menuUserId = null"/>\n\t\t<Popup\n\t\t\tv-if="isPopupShown"\n\t\t\t:options="popupOptions()"\n\t\t\t@close="isPopupShown = false"\n\t\t>\n\t\t\t<div class="tasks-field-users --popup">\n\t\t\t\t<UserAvatarListUsers\n\t\t\t\t\t:users="popupUsers"\n\t\t\t\t\t:withCross="!withActionMenu"\n\t\t\t\t\tref="popupUserList"\n\t\t\t\t\t@onClick="(userId) => handleClick(userId)"\n\t\t\t\t\t@onCrossClick="(userId) => removeUser(userId)"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</Popup>\n\t`};t.ParticipantList=I;t.participantMeta=g})(this.BX.Tasks.V2.Component.Elements=this.BX.Tasks.V2.Component.Elements||{},BX,BX.UI.EntitySelector,BX.UI.Vue3.Components,BX.UI.Vue3.Components,BX.UI.IconSet,BX.UI.IconSet,BX,BX.Tasks.V2.Lib,BX.Tasks.V2.Lib,BX.Tasks.V2.Lib,BX.Tasks.V2.Provider.Service,BX.Tasks.V2.Component.Elements,BX.Tasks.V2,BX.Tasks.V2.Const);
//# sourceMappingURL=participant-list.bundle.map.js