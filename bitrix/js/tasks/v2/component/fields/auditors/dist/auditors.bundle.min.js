this.BX=this.BX||{};this.BX.Tasks=this.BX.Tasks||{};this.BX.Tasks.V2=this.BX.Tasks.V2||{};this.BX.Tasks.V2.Component=this.BX.Tasks.V2.Component||{};(function(t,s,e,i,a,d,r,n,o,h,l,u){"use strict";const p=Object.freeze({id:"auditorsIds",title:s.Loc.getMessage("TASKS_V2_AUDITORS_TITLE")});const c={methods:{update(t){this.insertUsers(t);this.updateTask(t.map((({id:t})=>t)))},insertUsers(t){void e.Core.getStore().dispatch(`${n.Model.Users}/upsertMany`,t)},updateTask(t){void i.taskService.update(this.taskId,{auditorsIds:t})}}};const k={name:"TaskAuditors",components:{ParticipantList:h.ParticipantList},mixins:[c],props:{taskId:{type:[Number,String],required:true}},computed:{task(){return this.$store.getters[`${n.Model.Tasks}/getById`](this.taskId)},users(){return this.$store.getters[`${n.Model.Users}/getByIds`](this.task.auditorsIds)},dataset(){return{"data-task-id":this.taskId,"data-task-field-id":p.id,"data-task-field-value":this.task.auditorsIds.join(",")}}},template:`\n\t\t<ParticipantList\n\t\t\t:taskId="taskId"\n\t\t\tcontext="auditors"\n\t\t\t:users="users"\n\t\t\t:dataset="dataset"\n\t\t\t@update="update"\n\t\t/>\n\t`};const g={components:{Chip:o.Chip},mixins:[c],props:{taskId:{type:[Number,String],required:true}},setup(){return{Outline:d.Outline,auditorsMeta:p}},computed:{task(){return this.$store.getters[`${n.Model.Tasks}/getById`](this.taskId)},preselected(){return this.task.auditorsIds.map((t=>["user",t]))},design(){return this.isSelected?o.ChipDesign.ShadowAccent:o.ChipDesign.Shadow},isSelected(){return this.$store.getters[`${n.Model.Tasks}/wasFieldFilled`](this.taskId,p.id)},readonly(){return!this.task.rights.edit}},unmounted(){var t;(t=this.selector)==null?void 0:t.destroy()},methods:{showDialog(){var t;if(this.isSelected){this.highlightField();return}(t=this.selector)!=null?t:this.selector=new u.UserSelectorDialog({taskId:this.taskId,preselected:this.preselected,dialogOptions:h.participantMeta.dialogOptions(this.taskId,"auditors"),events:{onHide:()=>{const t=this.selector.getDialog().getSelectedItems().map((t=>({id:t.getId(),name:t.getTitle(),image:t.getAvatar()})));if(!this.isSelected&&t.length>0){this.highlightField()}this.update(t)}}});this.selector.selectItemsByIds(this.preselected);this.selector.show(this.$refs.chip.$el)},highlightField(){void l.fieldHighlighter.setContainer(this.$root.$el).highlight(p.id)}},template:`\n\t\t<Chip\n\t\t\tv-if="isSelected || !readonly"\n\t\t\t:design="design"\n\t\t\t:icon="Outline.OBSERVER"\n\t\t\t:text="auditorsMeta.title"\n\t\t\t:data-task-id="taskId"\n\t\t\t:data-task-chip-id="auditorsMeta.id"\n\t\t\t:data-task-chip-value="task.auditorsIds.join(',')"\n\t\t\tref="chip"\n\t\t\t@click="showDialog"\n\t\t/>\n\t`};t.Auditors=k;t.AuditorsChip=g;t.auditorsMeta=p})(this.BX.Tasks.V2.Component.Fields=this.BX.Tasks.V2.Component.Fields||{},BX,BX.Tasks.V2,BX.Tasks.V2.Provider.Service,BX.UI.EntitySelector,BX.UI.IconSet,BX,BX.Tasks.V2.Const,BX.Tasks.V2.Component.Elements,BX.Tasks.V2.Component.Elements,BX.Tasks.V2.Lib,BX.Tasks.V2.Lib);
//# sourceMappingURL=auditors.bundle.map.js